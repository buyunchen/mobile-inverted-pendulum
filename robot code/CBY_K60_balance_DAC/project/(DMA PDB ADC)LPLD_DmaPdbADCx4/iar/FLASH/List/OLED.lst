###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.70.2.6274/W32 for ARM      03/Nov/2019  15:52:05 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\Buyun\Progress\memristor based control\mcu            #
#                    code\paper code\0.1ms control period\test                #
#                    code\CBY_K60_balance_DAC\lib\LPLD\DEV\OLED.c             #
#    Command line =  "D:\Buyun\Progress\memristor based control\mcu           #
#                    code\paper code\0.1ms control period\test                #
#                    code\CBY_K60_balance_DAC\lib\LPLD\DEV\OLED.c" -D         #
#                    LPLD_K60 -lCN "D:\Buyun\Progress\memristor based         #
#                    control\mcu code\paper code\0.1ms control period\test    #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\FLASH\List\" -lB                #
#                    "D:\Buyun\Progress\memristor based control\mcu           #
#                    code\paper code\0.1ms control period\test                #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\FLASH\List\" -o                 #
#                    "D:\Buyun\Progress\memristor based control\mcu           #
#                    code\paper code\0.1ms control period\test                #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\FLASH\Obj\" --no_cse            #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_clustering --no_scheduling --debug --endian=little  #
#                    --cpu=Cortex-M4 -e --fpu=None --dlib_config "C:\Program  #
#                    Files (x86)\IAR Systems\Embedded Workbench               #
#                    6.5_2\arm\INC\c\DLib_Config_Normal.h" -I                 #
#                    "D:\Buyun\Progress\memristor based control\mcu           #
#                    code\paper code\0.1ms control period\test                #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\app\" -I                     #
#                    "D:\Buyun\Progress\memristor based control\mcu           #
#                    code\paper code\0.1ms control period\test                #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\CPU\" -I           #
#                    "D:\Buyun\Progress\memristor based control\mcu           #
#                    code\paper code\0.1ms control period\test                #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\common\" -I        #
#                    "D:\Buyun\Progress\memristor based control\mcu           #
#                    code\paper code\0.1ms control period\test                #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\LPLD\" -I          #
#                    "D:\Buyun\Progress\memristor based control\mcu           #
#                    code\paper code\0.1ms control period\test                #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\LPLD\HW\" -I       #
#                    "D:\Buyun\Progress\memristor based control\mcu           #
#                    code\paper code\0.1ms control period\test                #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\LPLD\DEV\" -I      #
#                    "D:\Buyun\Progress\memristor based control\mcu           #
#                    code\paper code\0.1ms control period\test                #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\uCOS-II\Ports\"    #
#                    -I "D:\Buyun\Progress\memristor based control\mcu        #
#                    code\paper code\0.1ms control period\test                #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\uCOS-II\Source\"   #
#                    -I "D:\Buyun\Progress\memristor based control\mcu        #
#                    code\paper code\0.1ms control period\test                #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\FatFs\" -I         #
#                    "D:\Buyun\Progress\memristor based control\mcu           #
#                    code\paper code\0.1ms control period\test                #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\FatFs\option\" -I  #
#                    "D:\Buyun\Progress\memristor based control\mcu           #
#                    code\paper code\0.1ms control period\test                #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\USB\common\" -I    #
#                    "D:\Buyun\Progress\memristor based control\mcu           #
#                    code\paper code\0.1ms control period\test                #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\USB\driver\" -I    #
#                    "D:\Buyun\Progress\memristor based control\mcu           #
#                    code\paper code\0.1ms control period\test                #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\USB\descriptor\"   #
#                    -I "D:\Buyun\Progress\memristor based control\mcu        #
#                    code\paper code\0.1ms control period\test                #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\USB\class\" -Ol    #
#                    -I "C:\Program Files (x86)\IAR Systems\Embedded          #
#                    Workbench 6.5_2\arm\CMSIS\Include\" -D ARM_MATH_CM4      #
#    List file    =  D:\Buyun\Progress\memristor based control\mcu            #
#                    code\paper code\0.1ms control period\test                #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\FLASH\List\OLED.lst             #
#    Object file  =  D:\Buyun\Progress\memristor based control\mcu            #
#                    code\paper code\0.1ms control period\test                #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\FLASH\Obj\OLED.o                #
#                                                                             #
#                                                                             #
###############################################################################

D:\Buyun\Progress\memristor based control\mcu code\paper code\0.1ms control period\test code\CBY_K60_balance_DAC\lib\LPLD\DEV\OLED.c
      1          /********************************************************   
      2          【平    台】龙丘K10/60DN/DX多功能开发板
      3          【编    写】龙丘
      4          【Designed】by Chiu Sir
      5          【E-mail  】chiusir@yahoo.cn
      6          【软件版本】V1.0
      7          【最后更新】2012年4月23日
      8          【相关信息参考下列地址】
      9          【网    站】http://www.lqist.cn
     10          【淘宝店铺】http://shop36265907.taobao.com
     11          ------------------------------------------------
     12          【dev.env.】CodeWarrior 10.1/IAR
     13          【Target  】K60DX/DN
     14          【Crystal 】50.000Mhz
     15          【busclock】???.000MHz
     16          【pllclock】100.000MHz    
     17          ***************************
     18          ------------------------------------------------ 
     19          使用说明：SD卡核心板专用程序
     20          OLED电源使用3.3V。   
     21          ----------------
     22          G    电源地
     23          3.3V 接3.3V电源
     24          D0   PORTA_PA15  
     25          D1   PORTA_PA16
     26          RST  PORTA_PA13 
     27          DC   PORTA_PA12
     28          CS   已接地，不用接  
     29          *********************************************************/
     30          #include "OLED.h"
     31          #include <stdarg.h>
     32          
     33          #define XLevelL		0x00
     34          #define XLevelH		0x10
     35          #define XLevel		((XLevelH&0x0F)*16+XLevelL)
     36          #define Max_Column	128
     37          #define Max_Row		  64
     38          #define	Brightness	0xCF 
     39          
     40          /*
     41          4线SPI使用说明：
     42          VBT 供内部DC-DC电压，3.3~4.3V，如果使用5V电压，为保险起见串一个100~500欧的电阻
     43          VCC 供内部逻辑电压 1.8~6V   
     44          GND 地
     45          
     46          BS0 低电平
     47          BS1 低电平
     48          BS2 低电平
     49          
     50          CS  片选管脚
     51          DC  命令数据选择管脚
     52          RES 模块复位管脚 
     53          D0（SCLK） ，时钟脚，由MCU控制
     54          D1（MOSI） ，主输出从输入数据脚，由MCU控制
     55          
     56          D2 悬空      
     57          D3-D7 ， 低电平 ， 也可悬空，但最好设为低电平
     58          RD  低电平 ，也可悬空，但最好设为低电平
     59          RW  低电平 ，也可悬空，但最好设为低电平
     60          RD  低电平 ，也可悬空，但最好设为低电平   
     61          */
     62          
     63          #define X_WIDTH 128
     64          #define Y_WIDTH 64
     65          //======================================

   \                                 In section .rodata, align 4
     66          const uint8 F6x8[][6] =
   \                     F6x8:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 47, 0, 0, 0, 0, 7, 0, 7, 0, 0, 20, 127
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x2F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x07 0x00    
   \              0x07 0x00    
   \              0x00 0x14    
   \              0x7F         
   \   00000015   0x14 0x7F          DC8 20, 127, 20, 0, 36, 42, 127, 42, 18, 0, 98, 100, 8, 19, 35, 0, 54
   \              0x14 0x00    
   \              0x24 0x2A    
   \              0x7F 0x2A    
   \              0x12 0x00    
   \              0x62 0x64    
   \              0x08 0x13    
   \              0x23 0x00    
   \              0x36         
   \   00000026   0x49 0x55          DC8 73, 85, 34, 80, 0, 0, 5, 3, 0, 0, 0, 0, 28, 34, 65, 0, 0, 0, 65, 34
   \              0x22 0x50    
   \              0x00 0x00    
   \              0x05 0x03    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x1C 0x22    
   \              0x41 0x00    
   \              0x00 0x00    
   \              0x41 0x22    
   \   0000003A   0x1C 0x00          DC8 28, 0, 0, 20, 8, 62, 8, 20, 0, 8, 8, 62, 8, 8, 0, 0, 0, 160, 96, 0
   \              0x00 0x14    
   \              0x08 0x3E    
   \              0x08 0x14    
   \              0x00 0x08    
   \              0x08 0x3E    
   \              0x08 0x08    
   \              0x00 0x00    
   \              0x00 0xA0    
   \              0x60 0x00    
   \   0000004E   0x00 0x08          DC8 0, 8, 8, 8, 8, 8, 0, 0, 96, 96, 0, 0, 0, 32, 16, 8, 4, 2, 0, 62, 81
   \              0x08 0x08    
   \              0x08 0x08    
   \              0x00 0x00    
   \              0x60 0x60    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x10 0x08    
   \              0x04 0x02    
   \              0x00 0x3E    
   \              0x51         
   \   00000063   0x49 0x45          DC8 73, 69, 62, 0, 0, 66, 127, 64, 0, 0, 66, 97, 81, 73, 70, 0, 33, 65
   \              0x3E 0x00    
   \              0x00 0x42    
   \              0x7F 0x40    
   \              0x00 0x00    
   \              0x42 0x61    
   \              0x51 0x49    
   \              0x46 0x00    
   \              0x21 0x41    
   \   00000075   0x45 0x4B          DC8 69, 75, 49, 0, 24, 20, 18, 127, 16, 0, 39, 69, 69, 69, 57, 0, 60
   \              0x31 0x00    
   \              0x18 0x14    
   \              0x12 0x7F    
   \              0x10 0x00    
   \              0x27 0x45    
   \              0x45 0x45    
   \              0x39 0x00    
   \              0x3C         
   \   00000086   0x4A 0x49          DC8 74, 73, 73, 48, 0, 1, 113, 9, 5, 3, 0, 54, 73, 73, 73, 54, 0, 6, 73
   \              0x49 0x30    
   \              0x00 0x01    
   \              0x71 0x09    
   \              0x05 0x03    
   \              0x00 0x36    
   \              0x49 0x49    
   \              0x49 0x36    
   \              0x00 0x06    
   \              0x49         
   \   00000099   0x49 0x29          DC8 73, 41, 30, 0, 0, 54, 54, 0, 0, 0, 0, 86, 54, 0, 0, 0, 8, 20, 34
   \              0x1E 0x00    
   \              0x00 0x36    
   \              0x36 0x00    
   \              0x00 0x00    
   \              0x00 0x56    
   \              0x36 0x00    
   \              0x00 0x00    
   \              0x08 0x14    
   \              0x22         
   \   000000AC   0x41 0x00          DC8 65, 0, 0, 20, 20, 20, 20, 20, 0, 0, 65, 34, 20, 8, 0, 2, 1, 81, 9
   \              0x00 0x14    
   \              0x14 0x14    
   \              0x14 0x14    
   \              0x00 0x00    
   \              0x41 0x22    
   \              0x14 0x08    
   \              0x00 0x02    
   \              0x01 0x51    
   \              0x09         
   \   000000BF   0x06 0x00          DC8 6, 0, 50, 73, 89, 81, 62, 0, 124, 18, 17, 18, 124, 0, 127, 73, 73
   \              0x32 0x49    
   \              0x59 0x51    
   \              0x3E 0x00    
   \              0x7C 0x12    
   \              0x11 0x12    
   \              0x7C 0x00    
   \              0x7F 0x49    
   \              0x49         
   \   000000D0   0x49 0x36          DC8 73, 54, 0, 62, 65, 65, 65, 34, 0, 127, 65, 65, 34, 28, 0, 127, 73
   \              0x00 0x3E    
   \              0x41 0x41    
   \              0x41 0x22    
   \              0x00 0x7F    
   \              0x41 0x41    
   \              0x22 0x1C    
   \              0x00 0x7F    
   \              0x49         
   \   000000E1   0x49 0x49          DC8 73, 73, 65, 0, 127, 9, 9, 9, 1, 0, 62, 65, 73, 73, 122, 0, 127, 8
   \              0x41 0x00    
   \              0x7F 0x09    
   \              0x09 0x09    
   \              0x01 0x00    
   \              0x3E 0x41    
   \              0x49 0x49    
   \              0x7A 0x00    
   \              0x7F 0x08    
   \   000000F3   0x08 0x08          DC8 8, 8, 127, 0, 0, 65, 127, 65, 0, 0, 32, 64, 65, 63, 1, 0, 127, 8
   \              0x7F 0x00    
   \              0x00 0x41    
   \              0x7F 0x41    
   \              0x00 0x00    
   \              0x20 0x40    
   \              0x41 0x3F    
   \              0x01 0x00    
   \              0x7F 0x08    
   \   00000105   0x14 0x22          DC8 20, 34, 65, 0, 127, 64, 64, 64, 64, 0, 127, 2, 12, 2, 127, 0, 127
   \              0x41 0x00    
   \              0x7F 0x40    
   \              0x40 0x40    
   \              0x40 0x00    
   \              0x7F 0x02    
   \              0x0C 0x02    
   \              0x7F 0x00    
   \              0x7F         
   \   00000116   0x04 0x08          DC8 4, 8, 16, 127, 0, 62, 65, 65, 65, 62, 0, 127, 9, 9, 9, 6, 0, 62, 65
   \              0x10 0x7F    
   \              0x00 0x3E    
   \              0x41 0x41    
   \              0x41 0x3E    
   \              0x00 0x7F    
   \              0x09 0x09    
   \              0x09 0x06    
   \              0x00 0x3E    
   \              0x41         
   \   00000129   0x51 0x21          DC8 81, 33, 94, 0, 127, 9, 25, 41, 70, 0, 70, 73, 73, 73, 49, 0, 1, 1
   \              0x5E 0x00    
   \              0x7F 0x09    
   \              0x19 0x29    
   \              0x46 0x00    
   \              0x46 0x49    
   \              0x49 0x49    
   \              0x31 0x00    
   \              0x01 0x01    
   \   0000013B   0x7F 0x01          DC8 127, 1, 1, 0, 63, 64, 64, 64, 63, 0, 31, 32, 64, 32, 31, 0, 63, 64
   \              0x01 0x00    
   \              0x3F 0x40    
   \              0x40 0x40    
   \              0x3F 0x00    
   \              0x1F 0x20    
   \              0x40 0x20    
   \              0x1F 0x00    
   \              0x3F 0x40    
   \   0000014D   0x38 0x40          DC8 56, 64, 63, 0, 99, 20, 8, 20, 99, 0, 7, 8, 112, 8, 7, 0, 97, 81, 73
   \              0x3F 0x00    
   \              0x63 0x14    
   \              0x08 0x14    
   \              0x63 0x00    
   \              0x07 0x08    
   \              0x70 0x08    
   \              0x07 0x00    
   \              0x61 0x51    
   \              0x49         
   \   00000160   0x45 0x43          DC8 69, 67, 0, 0, 127, 65, 65, 0, 0, 85, 42, 85, 42, 85, 0, 0, 65, 65
   \              0x00 0x00    
   \              0x7F 0x41    
   \              0x41 0x00    
   \              0x00 0x55    
   \              0x2A 0x55    
   \              0x2A 0x55    
   \              0x00 0x00    
   \              0x41 0x41    
   \   00000172   0x7F 0x00          DC8 127, 0, 0, 4, 2, 1, 2, 4, 0, 64, 64, 64, 64, 64, 0, 0, 1, 2, 4, 0
   \              0x00 0x04    
   \              0x02 0x01    
   \              0x02 0x04    
   \              0x00 0x40    
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x00 0x00    
   \              0x01 0x02    
   \              0x04 0x00    
   \   00000186   0x00 0x20          DC8 0, 32, 84, 84, 84, 120, 0, 127, 72, 68, 68, 56, 0, 56, 68, 68, 68
   \              0x54 0x54    
   \              0x54 0x78    
   \              0x00 0x7F    
   \              0x48 0x44    
   \              0x44 0x38    
   \              0x00 0x38    
   \              0x44 0x44    
   \              0x44         
   \   00000197   0x20 0x00          DC8 32, 0, 56, 68, 68, 72, 127, 0, 56, 84, 84, 84, 24, 0, 8, 126, 9, 1
   \              0x38 0x44    
   \              0x44 0x48    
   \              0x7F 0x00    
   \              0x38 0x54    
   \              0x54 0x54    
   \              0x18 0x00    
   \              0x08 0x7E    
   \              0x09 0x01    
   \   000001A9   0x02 0x00          DC8 2, 0, 24, 164, 164, 164, 124, 0, 127, 8, 4, 4, 120, 0, 0, 68, 125
   \              0x18 0xA4    
   \              0xA4 0xA4    
   \              0x7C 0x00    
   \              0x7F 0x08    
   \              0x04 0x04    
   \              0x78 0x00    
   \              0x00 0x44    
   \              0x7D         
   \   000001BA   0x40 0x00          DC8 64, 0, 0, 64, 128, 132, 125, 0, 0, 127, 16, 40, 68, 0, 0, 0, 65
   \              0x00 0x40    
   \              0x80 0x84    
   \              0x7D 0x00    
   \              0x00 0x7F    
   \              0x10 0x28    
   \              0x44 0x00    
   \              0x00 0x00    
   \              0x41         
   \   000001CB   0x7F 0x40          DC8 127, 64, 0, 0, 124, 4, 24, 4, 120, 0, 124, 8, 4, 4, 120, 0, 56, 68
   \              0x00 0x00    
   \              0x7C 0x04    
   \              0x18 0x04    
   \              0x78 0x00    
   \              0x7C 0x08    
   \              0x04 0x04    
   \              0x78 0x00    
   \              0x38 0x44    
   \   000001DD   0x44 0x44          DC8 68, 68, 56, 0, 252, 36, 36, 36, 24, 0, 24, 36, 36, 24, 252, 0, 124
   \              0x38 0x00    
   \              0xFC 0x24    
   \              0x24 0x24    
   \              0x18 0x00    
   \              0x18 0x24    
   \              0x24 0x18    
   \              0xFC 0x00    
   \              0x7C         
   \   000001EE   0x08 0x04          DC8 8, 4, 4, 8, 0, 72, 84, 84, 84, 32, 0, 4, 63, 68, 64, 32, 0, 60, 64
   \              0x04 0x08    
   \              0x00 0x48    
   \              0x54 0x54    
   \              0x54 0x20    
   \              0x00 0x04    
   \              0x3F 0x44    
   \              0x40 0x20    
   \              0x00 0x3C    
   \              0x40         
   \   00000201   0x40 0x20          DC8 64, 32, 124, 0, 28, 32, 64, 32, 28, 0, 60, 64, 48, 64, 60, 0, 68
   \              0x7C 0x00    
   \              0x1C 0x20    
   \              0x40 0x20    
   \              0x1C 0x00    
   \              0x3C 0x40    
   \              0x30 0x40    
   \              0x3C 0x00    
   \              0x44         
   \   00000212   0x28 0x10          DC8 40, 16, 40, 68, 0, 28, 160, 160, 160, 124, 0, 68, 100, 84, 76, 68
   \              0x28 0x44    
   \              0x00 0x1C    
   \              0xA0 0xA0    
   \              0xA0 0x7C    
   \              0x00 0x44    
   \              0x64 0x54    
   \              0x4C 0x44    
   \   00000222   0x14 0x14          DC8 20, 20, 20, 20, 20, 20
   \              0x14 0x14    
   \              0x14 0x14    
     67          {
     68            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // sp
     69            { 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00 },   // !
     70            { 0x00, 0x00, 0x07, 0x00, 0x07, 0x00 },   // "
     71            { 0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14 },   // #
     72            { 0x00, 0x24, 0x2a, 0x7f, 0x2a, 0x12 },   // $
     73            { 0x00, 0x62, 0x64, 0x08, 0x13, 0x23 },   // %
     74            { 0x00, 0x36, 0x49, 0x55, 0x22, 0x50 },   // &
     75            { 0x00, 0x00, 0x05, 0x03, 0x00, 0x00 },   // '
     76            { 0x00, 0x00, 0x1c, 0x22, 0x41, 0x00 },   // (
     77            { 0x00, 0x00, 0x41, 0x22, 0x1c, 0x00 },   // )
     78            { 0x00, 0x14, 0x08, 0x3E, 0x08, 0x14 },   // *
     79            { 0x00, 0x08, 0x08, 0x3E, 0x08, 0x08 },   // +
     80            { 0x00, 0x00, 0x00, 0xA0, 0x60, 0x00 },   // ,
     81            { 0x00, 0x08, 0x08, 0x08, 0x08, 0x08 },   // -
     82            { 0x00, 0x00, 0x60, 0x60, 0x00, 0x00 },   // .
     83            { 0x00, 0x20, 0x10, 0x08, 0x04, 0x02 },   // /
     84            { 0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E },   // 0
     85            { 0x00, 0x00, 0x42, 0x7F, 0x40, 0x00 },   // 1
     86            { 0x00, 0x42, 0x61, 0x51, 0x49, 0x46 },   // 2
     87            { 0x00, 0x21, 0x41, 0x45, 0x4B, 0x31 },   // 3
     88            { 0x00, 0x18, 0x14, 0x12, 0x7F, 0x10 },   // 4
     89            { 0x00, 0x27, 0x45, 0x45, 0x45, 0x39 },   // 5
     90            { 0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30 },   // 6
     91            { 0x00, 0x01, 0x71, 0x09, 0x05, 0x03 },   // 7
     92            { 0x00, 0x36, 0x49, 0x49, 0x49, 0x36 },   // 8
     93            { 0x00, 0x06, 0x49, 0x49, 0x29, 0x1E },   // 9
     94            { 0x00, 0x00, 0x36, 0x36, 0x00, 0x00 },   // :
     95            { 0x00, 0x00, 0x56, 0x36, 0x00, 0x00 },   // ;
     96            { 0x00, 0x08, 0x14, 0x22, 0x41, 0x00 },   // <
     97            { 0x00, 0x14, 0x14, 0x14, 0x14, 0x14 },   // =
     98            { 0x00, 0x00, 0x41, 0x22, 0x14, 0x08 },   // >
     99            { 0x00, 0x02, 0x01, 0x51, 0x09, 0x06 },   // ?
    100            { 0x00, 0x32, 0x49, 0x59, 0x51, 0x3E },   // @
    101            { 0x00, 0x7C, 0x12, 0x11, 0x12, 0x7C },   // A
    102            { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x36 },   // B
    103            { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x22 },   // C
    104            { 0x00, 0x7F, 0x41, 0x41, 0x22, 0x1C },   // D
    105            { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x41 },   // E
    106            { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x01 },   // F
    107            { 0x00, 0x3E, 0x41, 0x49, 0x49, 0x7A },   // G
    108            { 0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F },   // H
    109            { 0x00, 0x00, 0x41, 0x7F, 0x41, 0x00 },   // I
    110            { 0x00, 0x20, 0x40, 0x41, 0x3F, 0x01 },   // J
    111            { 0x00, 0x7F, 0x08, 0x14, 0x22, 0x41 },   // K
    112            { 0x00, 0x7F, 0x40, 0x40, 0x40, 0x40 },   // L
    113            { 0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F },   // M
    114            { 0x00, 0x7F, 0x04, 0x08, 0x10, 0x7F },   // N
    115            { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E },   // O
    116            { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x06 },   // P
    117            { 0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E },   // Q
    118            { 0x00, 0x7F, 0x09, 0x19, 0x29, 0x46 },   // R
    119            { 0x00, 0x46, 0x49, 0x49, 0x49, 0x31 },   // S
    120            { 0x00, 0x01, 0x01, 0x7F, 0x01, 0x01 },   // T
    121            { 0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F },   // U
    122            { 0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F },   // V
    123            { 0x00, 0x3F, 0x40, 0x38, 0x40, 0x3F },   // W
    124            { 0x00, 0x63, 0x14, 0x08, 0x14, 0x63 },   // X
    125            { 0x00, 0x07, 0x08, 0x70, 0x08, 0x07 },   // Y
    126            { 0x00, 0x61, 0x51, 0x49, 0x45, 0x43 },   // Z
    127            { 0x00, 0x00, 0x7F, 0x41, 0x41, 0x00 },   // [
    128            { 0x00, 0x55, 0x2A, 0x55, 0x2A, 0x55 },   // 55
    129            { 0x00, 0x00, 0x41, 0x41, 0x7F, 0x00 },   // ]
    130            { 0x00, 0x04, 0x02, 0x01, 0x02, 0x04 },   // ^
    131            { 0x00, 0x40, 0x40, 0x40, 0x40, 0x40 },   // _
    132            { 0x00, 0x00, 0x01, 0x02, 0x04, 0x00 },   // '
    133            { 0x00, 0x20, 0x54, 0x54, 0x54, 0x78 },   // a
    134            { 0x00, 0x7F, 0x48, 0x44, 0x44, 0x38 },   // b
    135            { 0x00, 0x38, 0x44, 0x44, 0x44, 0x20 },   // c
    136            { 0x00, 0x38, 0x44, 0x44, 0x48, 0x7F },   // d
    137            { 0x00, 0x38, 0x54, 0x54, 0x54, 0x18 },   // e
    138            { 0x00, 0x08, 0x7E, 0x09, 0x01, 0x02 },   // f
    139            { 0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C },   // g
    140            { 0x00, 0x7F, 0x08, 0x04, 0x04, 0x78 },   // h
    141            { 0x00, 0x00, 0x44, 0x7D, 0x40, 0x00 },   // i
    142            { 0x00, 0x40, 0x80, 0x84, 0x7D, 0x00 },   // j
    143            { 0x00, 0x7F, 0x10, 0x28, 0x44, 0x00 },   // k
    144            { 0x00, 0x00, 0x41, 0x7F, 0x40, 0x00 },   // l
    145            { 0x00, 0x7C, 0x04, 0x18, 0x04, 0x78 },   // m
    146            { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x78 },   // n
    147            { 0x00, 0x38, 0x44, 0x44, 0x44, 0x38 },   // o
    148            { 0x00, 0xFC, 0x24, 0x24, 0x24, 0x18 },   // p
    149            { 0x00, 0x18, 0x24, 0x24, 0x18, 0xFC },   // q
    150            { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x08 },   // r
    151            { 0x00, 0x48, 0x54, 0x54, 0x54, 0x20 },   // s
    152            { 0x00, 0x04, 0x3F, 0x44, 0x40, 0x20 },   // t
    153            { 0x00, 0x3C, 0x40, 0x40, 0x20, 0x7C },   // u
    154            { 0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C },   // v
    155            { 0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C },   // w
    156            { 0x00, 0x44, 0x28, 0x10, 0x28, 0x44 },   // x
    157            { 0x00, 0x1C, 0xA0, 0xA0, 0xA0, 0x7C },   // y
    158            { 0x00, 0x44, 0x64, 0x54, 0x4C, 0x44 },   // z
    159            { 0x14, 0x14, 0x14, 0x14, 0x14, 0x14 }    // horiz lines
    160          };

   \                                 In section .rodata, align 4
    161          const uint8 F14x16_Idx[] = 
   \                     F14x16_Idx:
   \   00000000   0xB1 0xB1          DC8 0B1H, 0B1H, 0BEH, 0A9H, 0C1H, 0FAH, 0C7H, 0F0H
   \              0xBE 0xA9    
   \              0xC1 0xFA    
   \              0xC7 0xF0    
   \   00000008   0xC7 0xF1          DC8 0C7H, 0F1H, 0BFH, 0C6H, 0BCH, 0BCH, 0BFH, 0AAH
   \              0xBF 0xC6    
   \              0xBC 0xBC    
   \              0xBF 0xAA    
   \   00000010   0xB7 0xA2          DC8 0B7H, 0A2H, 0B0H, 0E5H, 0D6H, 0C7H, 0C4H, 0DCH
   \              0xB0 0xE5    
   \              0xD6 0xC7    
   \              0xC4 0xDC    
   \   00000018   0xB3 0xB5          DC8 0B3H, 0B5H, 0CAH, 0D7H, 0D1H, 0A1H, 0D2H, 0BAH
   \              0xCA 0xD7    
   \              0xD1 0xA1    
   \              0xD2 0xBA    
   \   00000020   0xBE 0xA7          DC8 0BEH, 0A7H, 0CAH, 0D2H, 0CEH, 0C2H, 0B6H, 0C8H
   \              0xCA 0xD2    
   \              0xCE 0xC2    
   \              0xB6 0xC8    
   \   00000028   0xB0 0xB4          DC8 0B0H, 0B4H, 0BCH, 0FCH, 0B4H, 0CEH, 0B5H, 0E7H
   \              0xBC 0xFC    
   \              0xB4 0xCE    
   \              0xB5 0xE7    
   \   00000030   0xD1 0xB9          DC8 0D1H, 0B9H, 0
   \              0x00         
   \   00000033   0x00               DC8 0
    162          {
    163            "北京龙丘邱科技开发板智能车首选液晶室温度按键次电压"
    164          };

   \                                 In section .rodata, align 4
    165          const uint8 F14x16[] = {  
   \                     F14x16:
   \   00000000   0x20 0x20          DC8 32, 32, 32, 32, 255, 0, 0, 0, 255, 64, 32, 48, 24, 16, 48, 24, 8, 4
   \              0x20 0x20    
   \              0xFF 0x00    
   \              0x00 0x00    
   \              0xFF 0x40    
   \              0x20 0x30    
   \              0x18 0x10    
   \              0x30 0x18    
   \              0x08 0x04    
   \   00000012   0x7F 0x00          DC8 127, 0, 0, 0, 63, 64, 64, 64, 64, 120, 4, 4, 228, 36, 36, 37, 38
   \              0x00 0x00    
   \              0x3F 0x40    
   \              0x40 0x40    
   \              0x40 0x78    
   \              0x04 0x04    
   \              0xE4 0x24    
   \              0x24 0x25    
   \              0x26         
   \   00000023   0x24 0x24          DC8 36, 36, 36, 228, 6, 4, 0, 32, 16, 25, 13, 65, 129, 127, 1, 1, 5, 13
   \              0x24 0xE4    
   \              0x06 0x04    
   \              0x00 0x20    
   \              0x10 0x19    
   \              0x0D 0x41    
   \              0x81 0x7F    
   \              0x01 0x01    
   \              0x05 0x0D    
   \   00000035   0x38 0x10          DC8 56, 16, 0, 16, 16, 16, 16, 16, 255, 16, 240, 18, 28, 208, 16, 16
   \              0x00 0x10    
   \              0x10 0x10    
   \              0x10 0x10    
   \              0xFF 0x10    
   \              0xF0 0x12    
   \              0x1C 0xD0    
   \              0x10 0x10    
   \   00000045   0x10 0x40          DC8 16, 64, 32, 16, 12, 3, 16, 8, 63, 66, 65, 64, 64, 64, 112, 0, 0
   \              0x20 0x10    
   \              0x0C 0x03    
   \              0x10 0x08    
   \              0x3F 0x42    
   \              0x41 0x40    
   \              0x40 0x40    
   \              0x70 0x00    
   \              0x00         
   \   00000056   0xFE 0x84          DC8 254, 132, 132, 132, 132, 130, 130, 130, 130, 192, 128, 0, 32, 32
   \              0x84 0x84    
   \              0x84 0x82    
   \              0x82 0x82    
   \              0x82 0xC0    
   \              0x80 0x00    
   \              0x20 0x20    
   \   00000064   0x3F 0x20          DC8 63, 32, 32, 32, 32, 32, 63, 32, 32, 32, 48, 32, 0, 252, 36, 36, 226
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x3F 0x20    
   \              0x20 0x20    
   \              0x30 0x20    
   \              0x00 0xFC    
   \              0x24 0x24    
   \              0xE2         
   \   00000075   0x22 0x22          DC8 34, 34, 0, 254, 2, 34, 82, 142, 2, 16, 31, 16, 8, 15, 8, 8, 0, 255
   \              0x00 0xFE    
   \              0x02 0x22    
   \              0x52 0x8E    
   \              0x02 0x10    
   \              0x1F 0x10    
   \              0x08 0x0F    
   \              0x08 0x08    
   \              0x00 0xFF    
   \   00000087   0x00 0x08          DC8 0, 8, 8, 16, 15, 18, 146, 114, 254, 81, 145, 0, 34, 204, 0, 0, 255
   \              0x08 0x10    
   \              0x0F 0x12    
   \              0x92 0x72    
   \              0xFE 0x51    
   \              0x91 0x00    
   \              0x22 0xCC    
   \              0x00 0x00    
   \              0xFF         
   \   00000098   0x00 0x00          DC8 0, 0, 2, 1, 0, 255, 0, 4, 4, 4, 2, 2, 2, 255, 1, 1, 8, 136, 255, 72
   \              0x02 0x01    
   \              0x00 0xFF    
   \              0x00 0x04    
   \              0x04 0x04    
   \              0x02 0x02    
   \              0x02 0xFF    
   \              0x01 0x01    
   \              0x08 0x88    
   \              0xFF 0x48    
   \   000000AC   0x28 0x00          DC8 40, 0, 200, 72, 72, 127, 72, 200, 72, 8, 65, 128, 127, 0, 64, 64
   \              0xC8 0x48    
   \              0x48 0x7F    
   \              0x48 0xC8    
   \              0x48 0x08    
   \              0x41 0x80    
   \              0x7F 0x00    
   \              0x40 0x40    
   \   000000BC   0x20 0x13          DC8 32, 19, 12, 12, 18, 33, 96, 32, 66, 66, 66, 66, 254, 66, 66, 66, 66
   \              0x0C 0x0C    
   \              0x12 0x21    
   \              0x60 0x20    
   \              0x42 0x42    
   \              0x42 0x42    
   \              0xFE 0x42    
   \              0x42 0x42    
   \              0x42         
   \   000000CD   0xFE 0x42          DC8 254, 66, 66, 66, 66, 64, 32, 16, 12, 3, 0, 0, 0, 0, 127, 0, 0, 0, 0
   \              0x42 0x42    
   \              0x42 0x40    
   \              0x20 0x10    
   \              0x0C 0x03    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x7F 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000E0   0x10 0x3E          DC8 16, 62, 16, 16, 240, 159, 144, 144, 146, 148, 28, 16, 16, 16, 32
   \              0x10 0x10    
   \              0xF0 0x9F    
   \              0x90 0x90    
   \              0x92 0x94    
   \              0x1C 0x10    
   \              0x10 0x10    
   \              0x20         
   \   000000EF   0x10 0x88          DC8 16, 136, 135, 65, 70, 40, 16, 40, 39, 64, 192, 64, 0, 16, 208, 255
   \              0x87 0x41    
   \              0x46 0x28    
   \              0x10 0x28    
   \              0x27 0x40    
   \              0xC0 0x40    
   \              0x00 0x10    
   \              0xD0 0xFF    
   \   000000FF   0x50 0x90          DC8 80, 144, 0, 254, 98, 162, 34, 33, 161, 97, 0, 3, 0, 127, 0, 17, 14
   \              0x00 0xFE    
   \              0x62 0xA2    
   \              0x22 0x21    
   \              0xA1 0x61    
   \              0x00 0x03    
   \              0x00 0x7F    
   \              0x00 0x11    
   \              0x0E         
   \   00000110   0x41 0x20          DC8 65, 32, 17, 10, 14, 49, 96, 32, 20, 19, 146, 126, 50, 82, 146, 0
   \              0x11 0x0A    
   \              0x0E 0x31    
   \              0x60 0x20    
   \              0x14 0x13    
   \              0x92 0x7E    
   \              0x32 0x52    
   \              0x92 0x00    
   \   00000120   0x7C 0x44          DC8 124, 68, 68, 68, 124, 0, 1, 1, 0, 255, 73, 73, 73, 73, 73, 73, 255
   \              0x44 0x44    
   \              0x7C 0x00    
   \              0x01 0x01    
   \              0x00 0xFF    
   \              0x49 0x49    
   \              0x49 0x49    
   \              0x49 0x49    
   \              0xFF         
   \   00000131   0x00 0x00          DC8 0, 0, 0, 184, 151, 146, 144, 148, 184, 16, 0, 127, 72, 72, 68, 116
   \              0x00 0xB8    
   \              0x97 0x92    
   \              0x90 0x94    
   \              0xB8 0x10    
   \              0x00 0x7F    
   \              0x48 0x48    
   \              0x44 0x74    
   \   00000141   0x20 0xFF          DC8 32, 255, 10, 10, 74, 138, 127, 0, 0, 63, 68, 68, 66, 114, 32, 4
   \              0x0A 0x0A    
   \              0x4A 0x8A    
   \              0x7F 0x00    
   \              0x00 0x3F    
   \              0x44 0x44    
   \              0x42 0x72    
   \              0x20 0x04    
   \   00000151   0x84 0xC4          DC8 132, 196, 164, 156, 135, 132, 244, 132, 132, 132, 132, 132, 0, 4, 4
   \              0xA4 0x9C    
   \              0x87 0x84    
   \              0xF4 0x84    
   \              0x84 0x84    
   \              0x84 0x84    
   \              0x00 0x04    
   \              0x04         
   \   00000160   0x04 0x04          DC8 4, 4, 4, 4, 4, 255, 4, 4, 4, 4, 4, 4, 4, 4, 228, 37, 38, 52, 44, 36
   \              0x04 0x04    
   \              0x04 0xFF    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0xE4 0x25    
   \              0x26 0x34    
   \              0x2C 0x24    
   \   00000174   0x24 0x26          DC8 36, 38, 229, 4, 4, 4, 0, 0, 127, 37, 37, 37, 37, 37, 37, 37, 127, 0
   \              0xE5 0x04    
   \              0x04 0x04    
   \              0x00 0x00    
   \              0x7F 0x25    
   \              0x25 0x25    
   \              0x25 0x25    
   \              0x25 0x25    
   \              0x7F 0x00    
   \   00000186   0x00 0x00          DC8 0, 0, 64, 66, 204, 0, 80, 78, 200, 72, 127, 200, 72, 72, 64, 0, 64
   \              0x40 0x42    
   \              0xCC 0x00    
   \              0x50 0x4E    
   \              0xC8 0x48    
   \              0x7F 0xC8    
   \              0x48 0x48    
   \              0x40 0x00    
   \              0x40         
   \   00000197   0x20 0x1F          DC8 32, 31, 32, 72, 70, 65, 64, 64, 71, 72, 72, 78, 64, 97, 6, 224, 24
   \              0x20 0x48    
   \              0x46 0x41    
   \              0x40 0x40    
   \              0x47 0x48    
   \              0x48 0x4E    
   \              0x40 0x61    
   \              0x06 0xE0    
   \              0x18         
   \   000001A8   0x84 0xE4          DC8 132, 228, 28, 132, 101, 190, 36, 164, 100, 4, 4, 255, 0, 1, 0, 255
   \              0x1C 0x84    
   \              0x65 0xBE    
   \              0x24 0xA4    
   \              0x64 0x04    
   \              0x04 0xFF    
   \              0x00 0x01    
   \              0x00 0xFF    
   \   000001B8   0x41 0x21          DC8 65, 33, 18, 12, 27, 97, 192, 64, 0, 0, 0, 126, 42, 42, 42, 42, 42
   \              0x12 0x0C    
   \              0x1B 0x61    
   \              0xC0 0x40    
   \              0x00 0x00    
   \              0x00 0x7E    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A         
   \   000001C9   0x2A 0x7E          DC8 42, 126, 0, 0, 0, 127, 37, 37, 37, 37, 127, 0, 0, 127, 37, 37, 37
   \              0x00 0x00    
   \              0x00 0x7F    
   \              0x25 0x25    
   \              0x25 0x25    
   \              0x7F 0x00    
   \              0x00 0x7F    
   \              0x25 0x25    
   \              0x25         
   \   000001DA   0x25 0x7F          DC8 37, 127, 16, 44, 36, 164, 100, 37, 38, 36, 36, 164, 36, 52, 44, 4
   \              0x10 0x2C    
   \              0x24 0xA4    
   \              0x64 0x25    
   \              0x26 0x24    
   \              0x24 0xA4    
   \              0x24 0x34    
   \              0x2C 0x04    
   \   000001EA   0x40 0x48          DC8 64, 72, 73, 73, 73, 73, 127, 73, 73, 73, 75, 72, 64, 64, 33, 134
   \              0x49 0x49    
   \              0x49 0x49    
   \              0x7F 0x49    
   \              0x49 0x49    
   \              0x4B 0x48    
   \              0x40 0x40    
   \              0x21 0x86    
   \   000001FA   0x70 0x00          DC8 112, 0, 126, 74, 74, 74, 74, 74, 126, 0, 0, 0, 254, 1, 64, 127, 65
   \              0x7E 0x4A    
   \              0x4A 0x4A    
   \              0x4A 0x4A    
   \              0x7E 0x00    
   \              0x00 0x00    
   \              0xFE 0x01    
   \              0x40 0x7F    
   \              0x41         
   \   0000020B   0x41 0x7F          DC8 65, 127, 65, 65, 127, 65, 65, 127, 64, 0, 252, 4, 36, 36, 252, 165
   \              0x41 0x41    
   \              0x7F 0x41    
   \              0x41 0x7F    
   \              0x40 0x00    
   \              0xFC 0x04    
   \              0x24 0x24    
   \              0xFC 0xA5    
   \   0000021B   0xA6 0xA4          DC8 166, 164, 252, 36, 36, 36, 4, 96, 31, 128, 128, 66, 70, 42, 18, 18
   \              0xFC 0x24    
   \              0x24 0x24    
   \              0x04 0x60    
   \              0x1F 0x80    
   \              0x80 0x42    
   \              0x46 0x2A    
   \              0x12 0x12    
   \   0000022B   0x2A 0x26          DC8 42, 38, 66, 192, 64, 16, 16, 255, 144, 80, 152, 136, 136, 233, 142
   \              0x42 0xC0    
   \              0x40 0x10    
   \              0x10 0xFF    
   \              0x90 0x50    
   \              0x98 0x88    
   \              0x88 0xE9    
   \              0x8E         
   \   0000023A   0x88 0x88          DC8 136, 136, 152, 136, 66, 129, 127, 0, 64, 64, 38, 37, 24, 8, 22, 49
   \              0x98 0x88    
   \              0x42 0x81    
   \              0x7F 0x00    
   \              0x40 0x40    
   \              0x26 0x25    
   \              0x18 0x08    
   \              0x16 0x31    
   \   0000024A   0x60 0x20          DC8 96, 32, 48, 239, 40, 40, 68, 100, 220, 16, 84, 255, 84, 84, 124, 16
   \              0x30 0xEF    
   \              0x28 0x28    
   \              0x44 0x64    
   \              0xDC 0x10    
   \              0x54 0xFF    
   \              0x54 0x54    
   \              0x7C 0x10    
   \   0000025A   0x01 0x7F          DC8 1, 127, 33, 81, 34, 20, 15, 20, 37, 63, 69, 69, 69, 68, 2, 28, 192
   \              0x21 0x51    
   \              0x22 0x14    
   \              0x0F 0x14    
   \              0x25 0x3F    
   \              0x45 0x45    
   \              0x45 0x44    
   \              0x02 0x1C    
   \              0xC0         
   \   0000026B   0x30 0x4C          DC8 48, 76, 48, 15, 8, 248, 8, 8, 40, 24, 8, 94, 67, 32, 32, 16, 8, 4
   \              0x30 0x0F    
   \              0x08 0xF8    
   \              0x08 0x08    
   \              0x28 0x18    
   \              0x08 0x5E    
   \              0x43 0x20    
   \              0x20 0x10    
   \              0x08 0x04    
   \   0000027D   0x03 0x01          DC8 3, 1, 6, 8, 48, 96, 32, 0, 248, 72, 72, 72, 72, 255, 72, 72, 72, 72
   \              0x06 0x08    
   \              0x30 0x60    
   \              0x20 0x00    
   \              0xF8 0x48    
   \              0x48 0x48    
   \              0x48 0xFF    
   \              0x48 0x48    
   \              0x48 0x48    
   \   0000028F   0xF8 0x00          DC8 248, 0, 0, 0, 15, 4, 4, 4, 4, 63, 68, 68, 68, 68, 79, 64, 112, 0
   \              0x00 0x00    
   \              0x0F 0x04    
   \              0x04 0x04    
   \              0x04 0x3F    
   \              0x44 0x44    
   \              0x44 0x44    
   \              0x4F 0x40    
   \              0x70 0x00    
   \   000002A1   0xFE 0x02          DC8 254, 2, 66, 66, 66, 66, 250, 66, 66, 66, 98, 66, 2, 24, 39, 32, 32
   \              0x42 0x42    
   \              0x42 0x42    
   \              0xFA 0x42    
   \              0x42 0x42    
   \              0x62 0x42    
   \              0x02 0x18    
   \              0x27 0x20    
   \              0x20         
   \   000002B2   0x20 0x20          DC8 32, 32, 32, 63, 32, 33, 46, 36, 32, 32
   \              0x20 0x3F    
   \              0x20 0x21    
   \              0x2E 0x24    
   \              0x20 0x20    
    166            0x20,0x20,0x20,0x20,0xFF,0x00,0x00,0x00,0xFF,0x40,0x20,0x30,0x18,0x10,
    167            0x30,0x18,0x08,0x04,0x7F,0x00,0x00,0x00,0x3F,0x40,0x40,0x40,0x40,0x78,//北0
    168            0x04,0x04,0xE4,0x24,0x24,0x25,0x26,0x24,0x24,0x24,0xE4,0x06,0x04,0x00,
    169            0x20,0x10,0x19,0x0D,0x41,0x81,0x7F,0x01,0x01,0x05,0x0D,0x38,0x10,0x00,//京1
    170            0x10,0x10,0x10,0x10,0x10,0xFF,0x10,0xF0,0x12,0x1C,0xD0,0x10,0x10,0x10,
    171            0x40,0x20,0x10,0x0C,0x03,0x10,0x08,0x3F,0x42,0x41,0x40,0x40,0x40,0x70,//龙2
    172            0x00,0x00,0xFE,0x84,0x84,0x84,0x84,0x82,0x82,0x82,0x82,0xC0,0x80,0x00,
    173            0x20,0x20,0x3F,0x20,0x20,0x20,0x20,0x20,0x3F,0x20,0x20,0x20,0x30,0x20,//丘3
    174            0x00,0xFC,0x24,0x24,0xE2,0x22,0x22,0x00,0xFE,0x02,0x22,0x52,0x8E,0x02,
    175            0x10,0x1F,0x10,0x08,0x0F,0x08,0x08,0x00,0xFF,0x00,0x08,0x08,0x10,0x0F,//邱4
    176            0x12,0x92,0x72,0xFE,0x51,0x91,0x00,0x22,0xCC,0x00,0x00,0xFF,0x00,0x00,
    177            0x02,0x01,0x00,0xFF,0x00,0x04,0x04,0x04,0x02,0x02,0x02,0xFF,0x01,0x01,//科5
    178            0x08,0x88,0xFF,0x48,0x28,0x00,0xC8,0x48,0x48,0x7F,0x48,0xC8,0x48,0x08,
    179            0x41,0x80,0x7F,0x00,0x40,0x40,0x20,0x13,0x0C,0x0C,0x12,0x21,0x60,0x20,//技6
    180            0x42,0x42,0x42,0x42,0xFE,0x42,0x42,0x42,0x42,0xFE,0x42,0x42,0x42,0x42,
    181            0x40,0x20,0x10,0x0C,0x03,0x00,0x00,0x00,0x00,0x7F,0x00,0x00,0x00,0x00,//开7
    182            0x10,0x3E,0x10,0x10,0xF0,0x9F,0x90,0x90,0x92,0x94,0x1C,0x10,0x10,0x10,
    183            0x20,0x10,0x88,0x87,0x41,0x46,0x28,0x10,0x28,0x27,0x40,0xC0,0x40,0x00,//发8
    184            0x10,0xD0,0xFF,0x50,0x90,0x00,0xFE,0x62,0xA2,0x22,0x21,0xA1,0x61,0x00,
    185            0x03,0x00,0x7F,0x00,0x11,0x0E,0x41,0x20,0x11,0x0A,0x0E,0x31,0x60,0x20,//板9
    186            0x14,0x13,0x92,0x7E,0x32,0x52,0x92,0x00,0x7C,0x44,0x44,0x44,0x7C,0x00,
    187            0x01,0x01,0x00,0xFF,0x49,0x49,0x49,0x49,0x49,0x49,0xFF,0x00,0x00,0x00,//智10
    188            0xB8,0x97,0x92,0x90,0x94,0xB8,0x10,0x00,0x7F,0x48,0x48,0x44,0x74,0x20,
    189            0xFF,0x0A,0x0A,0x4A,0x8A,0x7F,0x00,0x00,0x3F,0x44,0x44,0x42,0x72,0x20,//能11
    190            0x04,0x84,0xC4,0xA4,0x9C,0x87,0x84,0xF4,0x84,0x84,0x84,0x84,0x84,0x00,
    191            0x04,0x04,0x04,0x04,0x04,0x04,0x04,0xFF,0x04,0x04,0x04,0x04,0x04,0x04,//车12
    192            0x04,0x04,0xE4,0x25,0x26,0x34,0x2C,0x24,0x24,0x26,0xE5,0x04,0x04,0x04,
    193            0x00,0x00,0x7F,0x25,0x25,0x25,0x25,0x25,0x25,0x25,0x7F,0x00,0x00,0x00,//首13
    194            0x40,0x42,0xCC,0x00,0x50,0x4E,0xC8,0x48,0x7F,0xC8,0x48,0x48,0x40,0x00,
    195            0x40,0x20,0x1F,0x20,0x48,0x46,0x41,0x40,0x40,0x47,0x48,0x48,0x4E,0x40,//选14
    196            0x61,0x06,0xE0,0x18,0x84,0xE4,0x1C,0x84,0x65,0xBE,0x24,0xA4,0x64,0x04,
    197            0x04,0xFF,0x00,0x01,0x00,0xFF,0x41,0x21,0x12,0x0C,0x1B,0x61,0xC0,0x40,//液15
    198            0x00,0x00,0x00,0x7E,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x7E,0x00,0x00,0x00,
    199            0x7F,0x25,0x25,0x25,0x25,0x7F,0x00,0x00,0x7F,0x25,0x25,0x25,0x25,0x7F,//晶16
    200            0x10,0x2C,0x24,0xA4,0x64,0x25,0x26,0x24,0x24,0xA4,0x24,0x34,0x2C,0x04,
    201            0x40,0x48,0x49,0x49,0x49,0x49,0x7F,0x49,0x49,0x49,0x4B,0x48,0x40,0x40,//室17
    202            0x21,0x86,0x70,0x00,0x7E,0x4A,0x4A,0x4A,0x4A,0x4A,0x7E,0x00,0x00,0x00,
    203            0xFE,0x01,0x40,0x7F,0x41,0x41,0x7F,0x41,0x41,0x7F,0x41,0x41,0x7F,0x40,//温18
    204            0x00,0xFC,0x04,0x24,0x24,0xFC,0xA5,0xA6,0xA4,0xFC,0x24,0x24,0x24,0x04,
    205            0x60,0x1F,0x80,0x80,0x42,0x46,0x2A,0x12,0x12,0x2A,0x26,0x42,0xC0,0x40,//度19
    206            0x10,0x10,0xFF,0x90,0x50,0x98,0x88,0x88,0xE9,0x8E,0x88,0x88,0x98,0x88,
    207            0x42,0x81,0x7F,0x00,0x40,0x40,0x26,0x25,0x18,0x08,0x16,0x31,0x60,0x20,//按20
    208            0x30,0xEF,0x28,0x28,0x44,0x64,0xDC,0x10,0x54,0xFF,0x54,0x54,0x7C,0x10,
    209            0x01,0x7F,0x21,0x51,0x22,0x14,0x0F,0x14,0x25,0x3F,0x45,0x45,0x45,0x44,//键21
    210            0x02,0x1C,0xC0,0x30,0x4C,0x30,0x0F,0x08,0xF8,0x08,0x08,0x28,0x18,0x08,
    211            0x5E,0x43,0x20,0x20,0x10,0x08,0x04,0x03,0x01,0x06,0x08,0x30,0x60,0x20,//次22
    212            0x00,0xF8,0x48,0x48,0x48,0x48,0xFF,0x48,0x48,0x48,0x48,0xF8,0x00,0x00,
    213            0x00,0x0F,0x04,0x04,0x04,0x04,0x3F,0x44,0x44,0x44,0x44,0x4F,0x40,0x70,//电23
    214            0x00,0xFE,0x02,0x42,0x42,0x42,0x42,0xFA,0x42,0x42,0x42,0x62,0x42,0x02,
    215            0x18,0x27,0x20,0x20,0x20,0x20,0x20,0x3F,0x20,0x21,0x2E,0x24,0x20,0x20,//压24  
    216          };
    217          
    218          //======================================================
    219          // 128X64I液晶底层驱动[8X16]字体库
    220          // 设计者: powerint
    221          // 描  述: [8X16]西文字符的字模数据 (纵向取模,字节倒序)
    222          // !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
    223          //======================================================

   \                                 In section .rodata, align 4
    224          const uint8 F8X16[]=
   \                     F8X16:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xF8    
   \              0x00 0x00    
   \   00000016   0x00 0x00          DC8 0, 0, 0, 0, 0, 51, 48, 0, 0, 0, 0, 16, 12, 6, 16, 12, 6, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x33    
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x00 0x10    
   \              0x0C 0x06    
   \              0x10 0x0C    
   \              0x06 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000002B   0x00 0x00          DC8 0, 0, 0, 0, 0, 64, 192, 120, 64, 192, 120, 64, 0, 4, 63, 4, 4, 63
   \              0x00 0x00    
   \              0x00 0x40    
   \              0xC0 0x78    
   \              0x40 0xC0    
   \              0x78 0x40    
   \              0x00 0x04    
   \              0x3F 0x04    
   \              0x04 0x3F    
   \   0000003D   0x04 0x04          DC8 4, 4, 0, 0, 112, 136, 252, 8, 48, 0, 0, 0, 24, 32, 255, 33, 30, 0
   \              0x00 0x00    
   \              0x70 0x88    
   \              0xFC 0x08    
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x18 0x20    
   \              0xFF 0x21    
   \              0x1E 0x00    
   \   0000004F   0x00 0xF0          DC8 0, 240, 8, 240, 0, 224, 24, 0, 0, 0, 33, 28, 3, 30, 33, 30, 0, 0
   \              0x08 0xF0    
   \              0x00 0xE0    
   \              0x18 0x00    
   \              0x00 0x00    
   \              0x21 0x1C    
   \              0x03 0x1E    
   \              0x21 0x1E    
   \              0x00 0x00    
   \   00000061   0xF0 0x08          DC8 240, 8, 136, 112, 0, 0, 0, 30, 33, 35, 36, 25, 39, 33, 16, 16, 22
   \              0x88 0x70    
   \              0x00 0x00    
   \              0x00 0x1E    
   \              0x21 0x23    
   \              0x24 0x19    
   \              0x27 0x21    
   \              0x10 0x10    
   \              0x16         
   \   00000072   0x0E 0x00          DC8 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 24, 4, 2
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xE0    
   \              0x18 0x04    
   \              0x02         
   \   00000087   0x00 0x00          DC8 0, 0, 0, 0, 7, 24, 32, 64, 0, 0, 2, 4, 24, 224, 0, 0, 0, 0, 64, 32
   \              0x00 0x00    
   \              0x07 0x18    
   \              0x20 0x40    
   \              0x00 0x00    
   \              0x02 0x04    
   \              0x18 0xE0    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x40 0x20    
   \   0000009B   0x18 0x07          DC8 24, 7, 0, 0, 0, 64, 64, 128, 240, 128, 64, 64, 0, 2, 2, 1, 15, 1, 2
   \              0x00 0x00    
   \              0x00 0x40    
   \              0x40 0x80    
   \              0xF0 0x80    
   \              0x40 0x40    
   \              0x00 0x02    
   \              0x02 0x01    
   \              0x0F 0x01    
   \              0x02         
   \   000000AE   0x02 0x00          DC8 2, 0, 0, 0, 0, 240, 0, 0, 0, 0, 1, 1, 1, 31, 1, 1, 1, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0xF0    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x01    
   \              0x01 0x1F    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C4   0x00 0x00          DC8 0, 0, 0, 0, 128, 176, 112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x80 0xB0    
   \              0x70 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000D9   0x01 0x01          DC8 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 48, 0, 0, 0, 0
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x30 0x30    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000EF   0x00 0x00          DC8 0, 0, 0, 0, 0, 128, 96, 24, 4, 0, 96, 24, 6, 1, 0, 0, 0, 0, 224, 16
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x60 0x18    
   \              0x04 0x00    
   \              0x60 0x18    
   \              0x06 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xE0 0x10    
   \   00000103   0x08 0x08          DC8 8, 8, 16, 224, 0, 0, 15, 16, 32, 32, 16, 15, 0, 0, 16, 16, 248, 0
   \              0x10 0xE0    
   \              0x00 0x00    
   \              0x0F 0x10    
   \              0x20 0x20    
   \              0x10 0x0F    
   \              0x00 0x00    
   \              0x10 0x10    
   \              0xF8 0x00    
   \   00000115   0x00 0x00          DC8 0, 0, 0, 0, 32, 32, 63, 32, 32, 0, 0, 0, 112, 8, 8, 8, 136, 112, 0
   \              0x00 0x00    
   \              0x20 0x20    
   \              0x3F 0x20    
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x70 0x08    
   \              0x08 0x08    
   \              0x88 0x70    
   \              0x00         
   \   00000128   0x00 0x30          DC8 0, 48, 40, 36, 34, 33, 48, 0, 0, 48, 8, 136, 136, 72, 48, 0, 0, 24
   \              0x28 0x24    
   \              0x22 0x21    
   \              0x30 0x00    
   \              0x00 0x30    
   \              0x08 0x88    
   \              0x88 0x48    
   \              0x30 0x00    
   \              0x00 0x18    
   \   0000013A   0x20 0x20          DC8 32, 32, 32, 17, 14, 0, 0, 0, 192, 32, 16, 248, 0, 0, 0, 7, 4, 36
   \              0x20 0x11    
   \              0x0E 0x00    
   \              0x00 0x00    
   \              0xC0 0x20    
   \              0x10 0xF8    
   \              0x00 0x00    
   \              0x00 0x07    
   \              0x04 0x24    
   \   0000014C   0x24 0x3F          DC8 36, 63, 36, 0, 0, 248, 8, 136, 136, 8, 8, 0, 0, 25, 33, 32, 32, 17
   \              0x24 0x00    
   \              0x00 0xF8    
   \              0x08 0x88    
   \              0x88 0x08    
   \              0x08 0x00    
   \              0x00 0x19    
   \              0x21 0x20    
   \              0x20 0x11    
   \   0000015E   0x0E 0x00          DC8 14, 0, 0, 224, 16, 136, 136, 24, 0, 0, 0, 15, 17, 32, 32, 17, 14, 0
   \              0x00 0xE0    
   \              0x10 0x88    
   \              0x88 0x18    
   \              0x00 0x00    
   \              0x00 0x0F    
   \              0x11 0x20    
   \              0x20 0x11    
   \              0x0E 0x00    
   \   00000170   0x00 0x38          DC8 0, 56, 8, 8, 200, 56, 8, 0, 0, 0, 0, 63, 0, 0, 0, 0, 0, 112, 136, 8
   \              0x08 0x08    
   \              0xC8 0x38    
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x00 0x3F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x70    
   \              0x88 0x08    
   \   00000184   0x08 0x88          DC8 8, 136, 112, 0, 0, 28, 34, 33, 33, 34, 28, 0, 0, 224, 16, 8, 8, 16
   \              0x70 0x00    
   \              0x00 0x1C    
   \              0x22 0x21    
   \              0x21 0x22    
   \              0x1C 0x00    
   \              0x00 0xE0    
   \              0x10 0x08    
   \              0x08 0x10    
   \   00000196   0xE0 0x00          DC8 224, 0, 0, 0, 49, 34, 34, 17, 15, 0, 0, 0, 0, 192, 192, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x31 0x22    
   \              0x22 0x11    
   \              0x0F 0x00    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0xC0 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001A9   0x00 0x00          DC8 0, 0, 48, 48, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 128, 96, 0
   \              0x30 0x30    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x60 0x00    
   \   000001BD   0x00 0x00          DC8 0, 0, 0, 0, 0, 128, 64, 32, 16, 8, 0, 0, 1, 2, 4, 8, 16, 32, 0, 64
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x40 0x20    
   \              0x10 0x08    
   \              0x00 0x00    
   \              0x01 0x02    
   \              0x04 0x08    
   \              0x10 0x20    
   \              0x00 0x40    
   \   000001D1   0x40 0x40          DC8 64, 64, 64, 64, 64, 64, 0, 4, 4, 4, 4, 4, 4, 4, 0, 0, 8, 16, 32, 64
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x00 0x04    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0x00 0x00    
   \              0x08 0x10    
   \              0x20 0x40    
   \   000001E5   0x80 0x00          DC8 128, 0, 0, 0, 32, 16, 8, 4, 2, 1, 0, 0, 112, 72, 8, 8, 8, 240, 0, 0
   \              0x00 0x00    
   \              0x20 0x10    
   \              0x08 0x04    
   \              0x02 0x01    
   \              0x00 0x00    
   \              0x70 0x48    
   \              0x08 0x08    
   \              0x08 0xF0    
   \              0x00 0x00    
   \   000001F9   0x00 0x00          DC8 0, 0, 48, 54, 1, 0, 0, 192, 48, 200, 40, 232, 16, 224, 0, 7, 24, 39
   \              0x30 0x36    
   \              0x01 0x00    
   \              0x00 0xC0    
   \              0x30 0xC8    
   \              0x28 0xE8    
   \              0x10 0xE0    
   \              0x00 0x07    
   \              0x18 0x27    
   \   0000020B   0x24 0x23          DC8 36, 35, 20, 11, 0, 0, 0, 192, 56, 224, 0, 0, 0, 32, 60, 35, 2, 2
   \              0x14 0x0B    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x38 0xE0    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x3C 0x23    
   \              0x02 0x02    
   \   0000021D   0x27 0x38          DC8 39, 56, 32, 8, 248, 136, 136, 136, 112, 0, 0, 32, 63, 32, 32, 32
   \              0x20 0x08    
   \              0xF8 0x88    
   \              0x88 0x88    
   \              0x70 0x00    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x20 0x20    
   \   0000022D   0x11 0x0E          DC8 17, 14, 0, 192, 48, 8, 8, 8, 8, 56, 0, 7, 24, 32, 32, 32, 16, 8, 0
   \              0x00 0xC0    
   \              0x30 0x08    
   \              0x08 0x08    
   \              0x08 0x38    
   \              0x00 0x07    
   \              0x18 0x20    
   \              0x20 0x20    
   \              0x10 0x08    
   \              0x00         
   \   00000240   0x08 0xF8          DC8 8, 248, 8, 8, 8, 16, 224, 0, 32, 63, 32, 32, 32, 16, 15, 0, 8, 248
   \              0x08 0x08    
   \              0x08 0x10    
   \              0xE0 0x00    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x20 0x10    
   \              0x0F 0x00    
   \              0x08 0xF8    
   \   00000252   0x88 0x88          DC8 136, 136, 232, 8, 16, 0, 32, 63, 32, 32, 35, 32, 24, 0, 8, 248, 136
   \              0xE8 0x08    
   \              0x10 0x00    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x23 0x20    
   \              0x18 0x00    
   \              0x08 0xF8    
   \              0x88         
   \   00000263   0x88 0xE8          DC8 136, 232, 8, 16, 0, 32, 63, 32, 0, 3, 0, 0, 0, 192, 48, 8, 8, 8, 56
   \              0x08 0x10    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x00 0x03    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x30 0x08    
   \              0x08 0x08    
   \              0x38         
   \   00000276   0x00 0x00          DC8 0, 0, 7, 24, 32, 32, 34, 30, 2, 0, 8, 248, 8, 0, 0, 8, 248, 8, 32
   \              0x07 0x18    
   \              0x20 0x20    
   \              0x22 0x1E    
   \              0x02 0x00    
   \              0x08 0xF8    
   \              0x08 0x00    
   \              0x00 0x08    
   \              0xF8 0x08    
   \              0x20         
   \   00000289   0x3F 0x21          DC8 63, 33, 1, 1, 33, 63, 32, 0, 8, 8, 248, 8, 8, 0, 0, 0, 32, 32, 63
   \              0x01 0x01    
   \              0x21 0x3F    
   \              0x20 0x00    
   \              0x08 0x08    
   \              0xF8 0x08    
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x20 0x20    
   \              0x3F         
   \   0000029C   0x20 0x20          DC8 32, 32, 0, 0, 0, 0, 8, 8, 248, 8, 8, 0, 192, 128, 128, 128, 127, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x08 0x08    
   \              0xF8 0x08    
   \              0x08 0x00    
   \              0xC0 0x80    
   \              0x80 0x80    
   \              0x7F 0x00    
   \   000002AE   0x00 0x00          DC8 0, 0, 8, 248, 136, 192, 40, 24, 8, 0, 32, 63, 32, 1, 38, 56, 32, 0
   \              0x08 0xF8    
   \              0x88 0xC0    
   \              0x28 0x18    
   \              0x08 0x00    
   \              0x20 0x3F    
   \              0x20 0x01    
   \              0x26 0x38    
   \              0x20 0x00    
   \   000002C0   0x08 0xF8          DC8 8, 248, 8, 0, 0, 0, 0, 0, 32, 63, 32, 32, 32, 32, 48, 0, 8, 248
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x30 0x00    
   \              0x08 0xF8    
   \   000002D2   0xF8 0x00          DC8 248, 0, 248, 248, 8, 0, 32, 63, 0, 63, 0, 63, 32, 0, 8, 248, 48
   \              0xF8 0xF8    
   \              0x08 0x00    
   \              0x20 0x3F    
   \              0x00 0x3F    
   \              0x00 0x3F    
   \              0x20 0x00    
   \              0x08 0xF8    
   \              0x30         
   \   000002E3   0xC0 0x00          DC8 192, 0, 8, 248, 8, 32, 63, 32, 0, 7, 24, 63, 0, 224, 16, 8, 8, 8
   \              0x08 0xF8    
   \              0x08 0x20    
   \              0x3F 0x20    
   \              0x00 0x07    
   \              0x18 0x3F    
   \              0x00 0xE0    
   \              0x10 0x08    
   \              0x08 0x08    
   \   000002F5   0x10 0xE0          DC8 16, 224, 0, 15, 16, 32, 32, 32, 16, 15, 0, 8, 248, 8, 8, 8, 8, 240
   \              0x00 0x0F    
   \              0x10 0x20    
   \              0x20 0x20    
   \              0x10 0x0F    
   \              0x00 0x08    
   \              0xF8 0x08    
   \              0x08 0x08    
   \              0x08 0xF0    
   \   00000307   0x00 0x20          DC8 0, 32, 63, 33, 1, 1, 1, 0, 0, 224, 16, 8, 8, 8, 16, 224, 0, 15, 24
   \              0x3F 0x21    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00 0xE0    
   \              0x10 0x08    
   \              0x08 0x08    
   \              0x10 0xE0    
   \              0x00 0x0F    
   \              0x18         
   \   0000031A   0x24 0x24          DC8 36, 36, 56, 80, 79, 0, 8, 248, 136, 136, 136, 136, 112, 0, 32, 63
   \              0x38 0x50    
   \              0x4F 0x00    
   \              0x08 0xF8    
   \              0x88 0x88    
   \              0x88 0x88    
   \              0x70 0x00    
   \              0x20 0x3F    
   \   0000032A   0x20 0x00          DC8 32, 0, 3, 12, 48, 32, 0, 112, 136, 8, 8, 8, 56, 0, 0, 56, 32, 33
   \              0x03 0x0C    
   \              0x30 0x20    
   \              0x00 0x70    
   \              0x88 0x08    
   \              0x08 0x08    
   \              0x38 0x00    
   \              0x00 0x38    
   \              0x20 0x21    
   \   0000033C   0x21 0x22          DC8 33, 34, 28, 0, 24, 8, 8, 248, 8, 8, 24, 0, 0, 0, 32, 63, 32, 0, 0
   \              0x1C 0x00    
   \              0x18 0x08    
   \              0x08 0xF8    
   \              0x08 0x08    
   \              0x18 0x00    
   \              0x00 0x00    
   \              0x20 0x3F    
   \              0x20 0x00    
   \              0x00         
   \   0000034F   0x00 0x08          DC8 0, 8, 248, 8, 0, 0, 8, 248, 8, 0, 31, 32, 32, 32, 32, 31, 0, 8, 120
   \              0xF8 0x08    
   \              0x00 0x00    
   \              0x08 0xF8    
   \              0x08 0x00    
   \              0x1F 0x20    
   \              0x20 0x20    
   \              0x20 0x1F    
   \              0x00 0x08    
   \              0x78         
   \   00000362   0x88 0x00          DC8 136, 0, 0, 200, 56, 8, 0, 0, 7, 56, 14, 1, 0, 0, 248, 8, 0, 248, 0
   \              0x00 0xC8    
   \              0x38 0x08    
   \              0x00 0x00    
   \              0x07 0x38    
   \              0x0E 0x01    
   \              0x00 0x00    
   \              0xF8 0x08    
   \              0x00 0xF8    
   \              0x00         
   \   00000375   0x08 0xF8          DC8 8, 248, 0, 3, 60, 7, 0, 7, 60, 3, 0, 8, 24, 104, 128, 128, 104, 24
   \              0x00 0x03    
   \              0x3C 0x07    
   \              0x00 0x07    
   \              0x3C 0x03    
   \              0x00 0x08    
   \              0x18 0x68    
   \              0x80 0x80    
   \              0x68 0x18    
   \   00000387   0x08 0x20          DC8 8, 32, 48, 44, 3, 3, 44, 48, 32, 8, 56, 200, 0, 200, 56, 8, 0, 0, 0
   \              0x30 0x2C    
   \              0x03 0x03    
   \              0x2C 0x30    
   \              0x20 0x08    
   \              0x38 0xC8    
   \              0x00 0xC8    
   \              0x38 0x08    
   \              0x00 0x00    
   \              0x00         
   \   0000039A   0x20 0x3F          DC8 32, 63, 32, 0, 0, 0, 16, 8, 8, 8, 200, 56, 8, 0, 32, 56, 38, 33, 32
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x10 0x08    
   \              0x08 0x08    
   \              0xC8 0x38    
   \              0x08 0x00    
   \              0x20 0x38    
   \              0x26 0x21    
   \              0x20         
   \   000003AD   0x20 0x18          DC8 32, 24, 0, 0, 0, 0, 254, 2, 2, 2, 0, 0, 0, 0, 127, 64, 64, 64, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xFE 0x02    
   \              0x02 0x02    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x7F 0x40    
   \              0x40 0x40    
   \              0x00 0x00    
   \   000003C1   0x0C 0x30          DC8 12, 48, 192, 0, 0, 0, 0, 0, 0, 0, 1, 6, 56, 192, 0, 0, 2, 2, 2, 254
   \              0xC0 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x06    
   \              0x38 0xC0    
   \              0x00 0x00    
   \              0x02 0x02    
   \              0x02 0xFE    
   \   000003D5   0x00 0x00          DC8 0, 0, 0, 0, 64, 64, 64, 127, 0, 0, 0, 0, 0, 4, 2, 2, 2, 4, 0, 0, 0
   \              0x00 0x00    
   \              0x40 0x40    
   \              0x40 0x7F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x04    
   \              0x02 0x02    
   \              0x02 0x04    
   \              0x00 0x00    
   \              0x00         
   \   000003EA   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 128, 128, 128
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80         
   \   000003FD   0x80 0x80          DC8 128, 128, 128, 0, 2, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x80 0x00    
   \              0x02 0x02    
   \              0x04 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000412   0x80 0x80          DC8 128, 128, 128, 128, 0, 0, 0, 25, 36, 34, 34, 34, 63, 32, 8, 248, 0
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x19    
   \              0x24 0x22    
   \              0x22 0x22    
   \              0x3F 0x20    
   \              0x08 0xF8    
   \              0x00         
   \   00000423   0x80 0x80          DC8 128, 128, 0, 0, 0, 0, 63, 17, 32, 32, 17, 14, 0, 0, 0, 0, 128, 128
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x3F 0x11    
   \              0x20 0x20    
   \              0x11 0x0E    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \   00000435   0x80 0x00          DC8 128, 0, 0, 0, 14, 17, 32, 32, 32, 17, 0, 0, 0, 0, 128, 128, 136
   \              0x00 0x00    
   \              0x0E 0x11    
   \              0x20 0x20    
   \              0x20 0x11    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x88         
   \   00000446   0xF8 0x00          DC8 248, 0, 0, 14, 17, 32, 32, 16, 63, 32, 0, 0, 128, 128, 128, 128, 0
   \              0x00 0x0E    
   \              0x11 0x20    
   \              0x20 0x10    
   \              0x3F 0x20    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00         
   \   00000457   0x00 0x00          DC8 0, 0, 31, 34, 34, 34, 34, 19, 0, 0, 128, 128, 240, 136, 136, 136
   \              0x1F 0x22    
   \              0x22 0x22    
   \              0x22 0x13    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0xF0 0x88    
   \              0x88 0x88    
   \   00000467   0x18 0x00          DC8 24, 0, 32, 32, 63, 32, 32, 0, 0, 0, 0, 128, 128, 128, 128, 128, 0
   \              0x20 0x20    
   \              0x3F 0x20    
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00         
   \   00000478   0x00 0x6B          DC8 0, 107, 148, 148, 148, 147, 96, 0, 8, 248, 0, 128, 128, 128, 0, 0
   \              0x94 0x94    
   \              0x94 0x93    
   \              0x60 0x00    
   \              0x08 0xF8    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x00    
   \   00000488   0x20 0x3F          DC8 32, 63, 33, 0, 0, 32, 63, 32, 0, 128, 152, 152, 0, 0, 0, 0, 0, 32
   \              0x21 0x00    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x00 0x80    
   \              0x98 0x98    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x20    
   \   0000049A   0x20 0x3F          DC8 32, 63, 32, 32, 0, 0, 0, 0, 0, 128, 152, 152, 0, 0, 0, 192, 128
   \              0x20 0x20    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x98 0x98    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x80         
   \   000004AB   0x80 0x80          DC8 128, 128, 127, 0, 0, 8, 248, 0, 0, 128, 128, 128, 0, 32, 63, 36, 2
   \              0x7F 0x00    
   \              0x00 0x08    
   \              0xF8 0x00    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x20    
   \              0x3F 0x24    
   \              0x02         
   \   000004BC   0x2D 0x30          DC8 45, 48, 32, 0, 0, 8, 8, 248, 0, 0, 0, 0, 0, 32, 32, 63, 32, 32, 0
   \              0x20 0x00    
   \              0x00 0x08    
   \              0x08 0xF8    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x00         
   \   000004CF   0x00 0x80          DC8 0, 128, 128, 128, 128, 128, 128, 128, 0, 32, 63, 32, 0, 63, 32, 0
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x00 0x3F    
   \              0x20 0x00    
   \   000004DF   0x3F 0x80          DC8 63, 128, 128, 0, 128, 128, 128, 0, 0, 32, 63, 33, 0, 0, 32, 63, 32
   \              0x80 0x00    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x20    
   \              0x3F 0x21    
   \              0x00 0x00    
   \              0x20 0x3F    
   \              0x20         
   \   000004F0   0x00 0x00          DC8 0, 0, 128, 128, 128, 128, 0, 0, 0, 31, 32, 32, 32, 32, 31, 0, 128
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x1F    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x1F 0x00    
   \              0x80         
   \   00000501   0x80 0x00          DC8 128, 0, 128, 128, 0, 0, 0, 128, 255, 161, 32, 32, 17, 14, 0, 0, 0
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0xFF 0xA1    
   \              0x20 0x20    
   \              0x11 0x0E    
   \              0x00 0x00    
   \              0x00         
   \   00000512   0x00 0x80          DC8 0, 128, 128, 128, 128, 0, 0, 14, 17, 32, 32, 160, 255, 128, 128
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x0E    
   \              0x11 0x20    
   \              0x20 0xA0    
   \              0xFF 0x80    
   \              0x80         
   \   00000521   0x80 0x80          DC8 128, 128, 0, 128, 128, 128, 0, 32, 32, 63, 33, 32, 0, 1, 0, 0, 0
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x20    
   \              0x20 0x3F    
   \              0x21 0x20    
   \              0x00 0x01    
   \              0x00 0x00    
   \              0x00         
   \   00000532   0x80 0x80          DC8 128, 128, 128, 128, 128, 0, 0, 51, 36, 36, 36, 36, 25, 0, 0, 128
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x33    
   \              0x24 0x24    
   \              0x24 0x24    
   \              0x19 0x00    
   \              0x00 0x80    
   \   00000542   0x80 0xE0          DC8 128, 224, 128, 128, 0, 0, 0, 0, 0, 31, 32, 32, 0, 0, 128, 128, 0, 0
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x1F    
   \              0x20 0x20    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x00 0x00    
   \   00000554   0x00 0x80          DC8 0, 128, 128, 0, 0, 31, 32, 32, 32, 16, 63, 32, 128, 128, 128, 0, 0
   \              0x80 0x00    
   \              0x00 0x1F    
   \              0x20 0x20    
   \              0x20 0x10    
   \              0x3F 0x20    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00         
   \   00000565   0x80 0x80          DC8 128, 128, 128, 0, 1, 14, 48, 8, 6, 1, 0, 128, 128, 0, 128, 0, 128
   \              0x80 0x00    
   \              0x01 0x0E    
   \              0x30 0x08    
   \              0x06 0x01    
   \              0x00 0x80    
   \              0x80 0x00    
   \              0x80 0x00    
   \              0x80         
   \   00000576   0x80 0x80          DC8 128, 128, 15, 48, 12, 3, 12, 48, 15, 0, 0, 128, 128, 0, 128, 128
   \              0x0F 0x30    
   \              0x0C 0x03    
   \              0x0C 0x30    
   \              0x0F 0x00    
   \              0x00 0x80    
   \              0x80 0x00    
   \              0x80 0x80    
   \   00000586   0x80 0x00          DC8 128, 0, 0, 32, 49, 46, 14, 49, 32, 0, 128, 128, 128, 0, 0, 128, 128
   \              0x00 0x20    
   \              0x31 0x2E    
   \              0x0E 0x31    
   \              0x20 0x00    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x80    
   \              0x80         
   \   00000597   0x80 0x80          DC8 128, 128, 129, 142, 112, 24, 6, 1, 0, 0, 128, 128, 128, 128, 128
   \              0x81 0x8E    
   \              0x70 0x18    
   \              0x06 0x01    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80         
   \   000005A6   0x80 0x00          DC8 128, 0, 0, 33, 48, 44, 34, 33, 48, 0, 0, 0, 0, 0, 128, 124, 2, 2, 0
   \              0x00 0x21    
   \              0x30 0x2C    
   \              0x22 0x21    
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x7C    
   \              0x02 0x02    
   \              0x00         
   \   000005B9   0x00 0x00          DC8 0, 0, 0, 0, 63, 64, 64, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 255
   \              0x00 0x00    
   \              0x3F 0x40    
   \              0x40 0x00    
   \              0x00 0x00    
   \              0x00 0xFF    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xFF    
   \   000005CD   0x00 0x00          DC8 0, 0, 0, 0, 2, 2, 124, 128, 0, 0, 0, 0, 64, 64, 63, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x02 0x02    
   \              0x7C 0x80    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x40 0x40    
   \              0x3F 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005E1   0x06 0x01          DC8 6, 1, 1, 2, 2, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x01 0x02    
   \              0x02 0x04    
   \              0x04 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
    225          {
    226            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 0
    227            0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x30,0x00,0x00,0x00,//!1
    228            0x00,0x10,0x0C,0x06,0x10,0x0C,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//"2
    229            0x40,0xC0,0x78,0x40,0xC0,0x78,0x40,0x00,0x04,0x3F,0x04,0x04,0x3F,0x04,0x04,0x00,//#3
    230            0x00,0x70,0x88,0xFC,0x08,0x30,0x00,0x00,0x00,0x18,0x20,0xFF,0x21,0x1E,0x00,0x00,//$4
    231            0xF0,0x08,0xF0,0x00,0xE0,0x18,0x00,0x00,0x00,0x21,0x1C,0x03,0x1E,0x21,0x1E,0x00,//%5
    232            0x00,0xF0,0x08,0x88,0x70,0x00,0x00,0x00,0x1E,0x21,0x23,0x24,0x19,0x27,0x21,0x10,//&6
    233            0x10,0x16,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//'7
    234            0x00,0x00,0x00,0xE0,0x18,0x04,0x02,0x00,0x00,0x00,0x00,0x07,0x18,0x20,0x40,0x00,//(8
    235            0x00,0x02,0x04,0x18,0xE0,0x00,0x00,0x00,0x00,0x40,0x20,0x18,0x07,0x00,0x00,0x00,//)9
    236            0x40,0x40,0x80,0xF0,0x80,0x40,0x40,0x00,0x02,0x02,0x01,0x0F,0x01,0x02,0x02,0x00,//*10
    237            0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x1F,0x01,0x01,0x01,0x00,//+11
    238            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xB0,0x70,0x00,0x00,0x00,0x00,0x00,//,12
    239            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,//-13
    240            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,0x00,0x00,//.14
    241            0x00,0x00,0x00,0x00,0x80,0x60,0x18,0x04,0x00,0x60,0x18,0x06,0x01,0x00,0x00,0x00,///15
    242            0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x0F,0x10,0x20,0x20,0x10,0x0F,0x00,//016
    243            0x00,0x10,0x10,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//117
    244            0x00,0x70,0x08,0x08,0x08,0x88,0x70,0x00,0x00,0x30,0x28,0x24,0x22,0x21,0x30,0x00,//218
    245            0x00,0x30,0x08,0x88,0x88,0x48,0x30,0x00,0x00,0x18,0x20,0x20,0x20,0x11,0x0E,0x00,//319
    246            0x00,0x00,0xC0,0x20,0x10,0xF8,0x00,0x00,0x00,0x07,0x04,0x24,0x24,0x3F,0x24,0x00,//420
    247            0x00,0xF8,0x08,0x88,0x88,0x08,0x08,0x00,0x00,0x19,0x21,0x20,0x20,0x11,0x0E,0x00,//521
    248            0x00,0xE0,0x10,0x88,0x88,0x18,0x00,0x00,0x00,0x0F,0x11,0x20,0x20,0x11,0x0E,0x00,//622
    249            0x00,0x38,0x08,0x08,0xC8,0x38,0x08,0x00,0x00,0x00,0x00,0x3F,0x00,0x00,0x00,0x00,//723
    250            0x00,0x70,0x88,0x08,0x08,0x88,0x70,0x00,0x00,0x1C,0x22,0x21,0x21,0x22,0x1C,0x00,//824
    251            0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x00,0x31,0x22,0x22,0x11,0x0F,0x00,//925
    252            0x00,0x00,0x00,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,//:26
    253            0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x60,0x00,0x00,0x00,0x00,//;27
    254            0x00,0x00,0x80,0x40,0x20,0x10,0x08,0x00,0x00,0x01,0x02,0x04,0x08,0x10,0x20,0x00,//<28
    255            0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x00,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x00,//=29
    256            0x00,0x08,0x10,0x20,0x40,0x80,0x00,0x00,0x00,0x20,0x10,0x08,0x04,0x02,0x01,0x00,//>30
    257            0x00,0x70,0x48,0x08,0x08,0x08,0xF0,0x00,0x00,0x00,0x00,0x30,0x36,0x01,0x00,0x00,//?31
    258            0xC0,0x30,0xC8,0x28,0xE8,0x10,0xE0,0x00,0x07,0x18,0x27,0x24,0x23,0x14,0x0B,0x00,//@32
    259            0x00,0x00,0xC0,0x38,0xE0,0x00,0x00,0x00,0x20,0x3C,0x23,0x02,0x02,0x27,0x38,0x20,//A33
    260            0x08,0xF8,0x88,0x88,0x88,0x70,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x11,0x0E,0x00,//B34
    261            0xC0,0x30,0x08,0x08,0x08,0x08,0x38,0x00,0x07,0x18,0x20,0x20,0x20,0x10,0x08,0x00,//C35
    262            0x08,0xF8,0x08,0x08,0x08,0x10,0xE0,0x00,0x20,0x3F,0x20,0x20,0x20,0x10,0x0F,0x00,//D36
    263            0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x20,0x23,0x20,0x18,0x00,//E37
    264            0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x00,0x03,0x00,0x00,0x00,//F38
    265            0xC0,0x30,0x08,0x08,0x08,0x38,0x00,0x00,0x07,0x18,0x20,0x20,0x22,0x1E,0x02,0x00,//G39
    266            0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x20,0x3F,0x21,0x01,0x01,0x21,0x3F,0x20,//H40
    267            0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//I41
    268            0x00,0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,0x00,//J42
    269            0x08,0xF8,0x88,0xC0,0x28,0x18,0x08,0x00,0x20,0x3F,0x20,0x01,0x26,0x38,0x20,0x00,//K43
    270            0x08,0xF8,0x08,0x00,0x00,0x00,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x20,0x30,0x00,//L44
    271            0x08,0xF8,0xF8,0x00,0xF8,0xF8,0x08,0x00,0x20,0x3F,0x00,0x3F,0x00,0x3F,0x20,0x00,//M45
    272            0x08,0xF8,0x30,0xC0,0x00,0x08,0xF8,0x08,0x20,0x3F,0x20,0x00,0x07,0x18,0x3F,0x00,//N46
    273            0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x10,0x20,0x20,0x20,0x10,0x0F,0x00,//O47
    274            0x08,0xF8,0x08,0x08,0x08,0x08,0xF0,0x00,0x20,0x3F,0x21,0x01,0x01,0x01,0x00,0x00,//P48
    275            0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x18,0x24,0x24,0x38,0x50,0x4F,0x00,//Q49
    276            0x08,0xF8,0x88,0x88,0x88,0x88,0x70,0x00,0x20,0x3F,0x20,0x00,0x03,0x0C,0x30,0x20,//R50
    277            0x00,0x70,0x88,0x08,0x08,0x08,0x38,0x00,0x00,0x38,0x20,0x21,0x21,0x22,0x1C,0x00,//S51
    278            0x18,0x08,0x08,0xF8,0x08,0x08,0x18,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//T52
    279            0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//U53
    280            0x08,0x78,0x88,0x00,0x00,0xC8,0x38,0x08,0x00,0x00,0x07,0x38,0x0E,0x01,0x00,0x00,//V54
    281            0xF8,0x08,0x00,0xF8,0x00,0x08,0xF8,0x00,0x03,0x3C,0x07,0x00,0x07,0x3C,0x03,0x00,//W55
    282            0x08,0x18,0x68,0x80,0x80,0x68,0x18,0x08,0x20,0x30,0x2C,0x03,0x03,0x2C,0x30,0x20,//X56
    283            0x08,0x38,0xC8,0x00,0xC8,0x38,0x08,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//Y57
    284            0x10,0x08,0x08,0x08,0xC8,0x38,0x08,0x00,0x20,0x38,0x26,0x21,0x20,0x20,0x18,0x00,//Z58
    285            0x00,0x00,0x00,0xFE,0x02,0x02,0x02,0x00,0x00,0x00,0x00,0x7F,0x40,0x40,0x40,0x00,//[59
    286            0x00,0x0C,0x30,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x06,0x38,0xC0,0x00,//\60
    287            0x00,0x02,0x02,0x02,0xFE,0x00,0x00,0x00,0x00,0x40,0x40,0x40,0x7F,0x00,0x00,0x00,//]61
    288            0x00,0x00,0x04,0x02,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//^62
    289            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,//_63
    290            0x00,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//`64
    291            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x19,0x24,0x22,0x22,0x22,0x3F,0x20,//a65
    292            0x08,0xF8,0x00,0x80,0x80,0x00,0x00,0x00,0x00,0x3F,0x11,0x20,0x20,0x11,0x0E,0x00,//b66
    293            0x00,0x00,0x00,0x80,0x80,0x80,0x00,0x00,0x00,0x0E,0x11,0x20,0x20,0x20,0x11,0x00,//c67
    294            0x00,0x00,0x00,0x80,0x80,0x88,0xF8,0x00,0x00,0x0E,0x11,0x20,0x20,0x10,0x3F,0x20,//d68
    295            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x22,0x22,0x22,0x22,0x13,0x00,//e69
    296            0x00,0x80,0x80,0xF0,0x88,0x88,0x88,0x18,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//f70
    297            0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x6B,0x94,0x94,0x94,0x93,0x60,0x00,//g71
    298            0x08,0xF8,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//h72
    299            0x00,0x80,0x98,0x98,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//i73
    300            0x00,0x00,0x00,0x80,0x98,0x98,0x00,0x00,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,//j74
    301            0x08,0xF8,0x00,0x00,0x80,0x80,0x80,0x00,0x20,0x3F,0x24,0x02,0x2D,0x30,0x20,0x00,//k75
    302            0x00,0x08,0x08,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//l76
    303            0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x20,0x3F,0x20,0x00,0x3F,0x20,0x00,0x3F,//m77
    304            0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//n78
    305            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//o79
    306            0x80,0x80,0x00,0x80,0x80,0x00,0x00,0x00,0x80,0xFF,0xA1,0x20,0x20,0x11,0x0E,0x00,//p80
    307            0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x0E,0x11,0x20,0x20,0xA0,0xFF,0x80,//q81
    308            0x80,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x20,0x20,0x3F,0x21,0x20,0x00,0x01,0x00,//r82
    309            0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x33,0x24,0x24,0x24,0x24,0x19,0x00,//s83
    310            0x00,0x80,0x80,0xE0,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x1F,0x20,0x20,0x00,0x00,//t84
    311            0x80,0x80,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0x1F,0x20,0x20,0x20,0x10,0x3F,0x20,//u85
    312            0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x00,0x01,0x0E,0x30,0x08,0x06,0x01,0x00,//v86
    313            0x80,0x80,0x00,0x80,0x00,0x80,0x80,0x80,0x0F,0x30,0x0C,0x03,0x0C,0x30,0x0F,0x00,//w87
    314            0x00,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x31,0x2E,0x0E,0x31,0x20,0x00,//x88
    315            0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x80,0x81,0x8E,0x70,0x18,0x06,0x01,0x00,//y89
    316            0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x21,0x30,0x2C,0x22,0x21,0x30,0x00,//z90
    317            0x00,0x00,0x00,0x00,0x80,0x7C,0x02,0x02,0x00,0x00,0x00,0x00,0x00,0x3F,0x40,0x40,//{91
    318            0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,//|92
    319            0x00,0x02,0x02,0x7C,0x80,0x00,0x00,0x00,0x00,0x40,0x40,0x3F,0x00,0x00,0x00,0x00,//}93
    320            0x00,0x06,0x01,0x01,0x02,0x02,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//~94
    321            
    322          };
    323          

   \                                 In section .text, align 4, keep-with-next
    324          void LCD_WrDat(uint8 data)
    325          {
    326            uint8 i=8;
   \                     LCD_WrDat: (+1)
   \   00000000   0x2108             MOVS     R1,#+8
    327            //LCD_CS=0;;
    328            DC_OUT = 1;
   \   00000002   0x.... 0x....      LDR.W    R2,??DataTable7  ;; 0x43fe1800
   \   00000006   0x2301             MOVS     R3,#+1
   \   00000008   0x6013             STR      R3,[R2, #+0]
    329            asm("nop"); 
   \   0000000A   0xBF00             nop
    330            D0_OUT = 0;
   \   0000000C   0x.... 0x....      LDR.W    R2,??DataTable7_1  ;; 0x43fe180c
   \   00000010   0x2300             MOVS     R3,#+0
   \   00000012   0x6013             STR      R3,[R2, #+0]
    331            asm("nop");    
   \   00000014   0xBF00             nop
   \   00000016   0xE00D             B.N      ??LCD_WrDat_0
    332            while(i--)
    333            {
    334              if(data&0x80)
    335                D1_OUT = 1;
    336              else
    337                D1_OUT = 0;
   \                     ??LCD_WrDat_1: (+1)
   \   00000018   0x.... 0x....      LDR.W    R2,??DataTable7_2  ;; 0x43fe1808
   \   0000001C   0x2300             MOVS     R3,#+0
   \   0000001E   0x6013             STR      R3,[R2, #+0]
    338              D0_OUT = 1;
   \                     ??LCD_WrDat_2: (+1)
   \   00000020   0x.... 0x....      LDR.W    R2,??DataTable7_1  ;; 0x43fe180c
   \   00000024   0x2301             MOVS     R3,#+1
   \   00000026   0x6013             STR      R3,[R2, #+0]
    339              asm("nop");
   \   00000028   0xBF00             nop
    340              //asm("nop");            
    341              D0_OUT = 0;
   \   0000002A   0x.... 0x....      LDR.W    R2,??DataTable7_1  ;; 0x43fe180c
   \   0000002E   0x2300             MOVS     R3,#+0
   \   00000030   0x6013             STR      R3,[R2, #+0]
    342              data<<=1;    
   \   00000032   0x0040             LSLS     R0,R0,#+1
   \                     ??LCD_WrDat_0: (+1)
   \   00000034   0x000A             MOVS     R2,R1
   \   00000036   0x1E51             SUBS     R1,R2,#+1
   \   00000038   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000003A   0x2A00             CMP      R2,#+0
   \   0000003C   0xD006             BEQ.N    ??LCD_WrDat_3
   \   0000003E   0x0602             LSLS     R2,R0,#+24
   \   00000040   0xD5EA             BPL.N    ??LCD_WrDat_1
   \   00000042   0x.... 0x....      LDR.W    R2,??DataTable7_2  ;; 0x43fe1808
   \   00000046   0x2301             MOVS     R3,#+1
   \   00000048   0x6013             STR      R3,[R2, #+0]
   \   0000004A   0xE7E9             B.N      ??LCD_WrDat_2
    343            }
    344            //LCD_CS=1;
    345          }
   \                     ??LCD_WrDat_3: (+1)
   \   0000004C   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
    346          void LCD_WrCmd(uint8 cmd)
    347          {
    348            uint8 i=8;
   \                     LCD_WrCmd: (+1)
   \   00000000   0x2108             MOVS     R1,#+8
    349            
    350            //LCD_CS=0;;
    351            DC_OUT = 0;
   \   00000002   0x.... 0x....      LDR.W    R2,??DataTable7  ;; 0x43fe1800
   \   00000006   0x2300             MOVS     R3,#+0
   \   00000008   0x6013             STR      R3,[R2, #+0]
    352            D0_OUT = 0;
   \   0000000A   0x.... 0x....      LDR.W    R2,??DataTable7_1  ;; 0x43fe180c
   \   0000000E   0x2300             MOVS     R3,#+0
   \   00000010   0x6013             STR      R3,[R2, #+0]
   \   00000012   0xE00D             B.N      ??LCD_WrCmd_0
    353            //asm("nop");   
    354            while(i--)
    355            {
    356              if(cmd&0x80)
    357                D1_OUT = 1; 
    358              else
    359                D1_OUT = 0;
   \                     ??LCD_WrCmd_1: (+1)
   \   00000014   0x.... 0x....      LDR.W    R2,??DataTable7_2  ;; 0x43fe1808
   \   00000018   0x2300             MOVS     R3,#+0
   \   0000001A   0x6013             STR      R3,[R2, #+0]
    360              D0_OUT = 1;
   \                     ??LCD_WrCmd_2: (+1)
   \   0000001C   0x.... 0x....      LDR.W    R2,??DataTable7_1  ;; 0x43fe180c
   \   00000020   0x2301             MOVS     R3,#+1
   \   00000022   0x6013             STR      R3,[R2, #+0]
    361              asm("nop");;;;
   \   00000024   0xBF00             nop
    362              //asm("nop");             
    363              D0_OUT = 0;
   \   00000026   0x.... 0x....      LDR.W    R2,??DataTable7_1  ;; 0x43fe180c
   \   0000002A   0x2300             MOVS     R3,#+0
   \   0000002C   0x6013             STR      R3,[R2, #+0]
    364              cmd<<=1;;;;;   
   \   0000002E   0x0040             LSLS     R0,R0,#+1
   \                     ??LCD_WrCmd_0: (+1)
   \   00000030   0x000A             MOVS     R2,R1
   \   00000032   0x1E51             SUBS     R1,R2,#+1
   \   00000034   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000036   0x2A00             CMP      R2,#+0
   \   00000038   0xD006             BEQ.N    ??LCD_WrCmd_3
   \   0000003A   0x0602             LSLS     R2,R0,#+24
   \   0000003C   0xD5EA             BPL.N    ??LCD_WrCmd_1
   \   0000003E   0x.... 0x....      LDR.W    R2,??DataTable7_2  ;; 0x43fe1808
   \   00000042   0x2301             MOVS     R3,#+1
   \   00000044   0x6013             STR      R3,[R2, #+0]
   \   00000046   0xE7E9             B.N      ??LCD_WrCmd_2
    365            } 	
    366            //LCD_CS=1;
    367          }
   \                     ??LCD_WrCmd_3: (+1)
   \   00000048   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
    368          void LCD_Set_Pos(uint8 x, uint8 y)
    369          { 
   \                     LCD_Set_Pos: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    370            LCD_WrCmd(0xb0+y);
   \   00000004   0xF1B1 0x0050      SUBS     R0,R1,#+80
   \   00000008   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000A   0x.... 0x....      BL       LCD_WrCmd
    371            LCD_WrCmd(((x&0xf0)>>4)|0x10);
   \   0000000E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000010   0x0920             LSRS     R0,R4,#+4
   \   00000012   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x.... 0x....      BL       LCD_WrCmd
    372            LCD_WrCmd((x&0x0f)|0x01); 
   \   0000001C   0xF014 0x000F      ANDS     R0,R4,#0xF
   \   00000020   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000024   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   0x.... 0x....      BL       LCD_WrCmd
    373          } 
   \   0000002A   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
    374          void LCD_Fill(uint8 bmp_data)
    375          {
   \                     LCD_Fill: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
    376            uint8 y,x;
    377            
    378            for(y=0;y<8;y++)
   \   00000004   0x2500             MOVS     R5,#+0
   \   00000006   0xE008             B.N      ??LCD_Fill_0
    379            {
    380              LCD_WrCmd(0xb0+y);
    381              LCD_WrCmd(0x01);
    382              LCD_WrCmd(0x10);
    383              for(x=0;x<X_WIDTH;x++)
    384                LCD_WrDat(bmp_data);
   \                     ??LCD_Fill_1: (+1)
   \   00000008   0x0020             MOVS     R0,R4
   \   0000000A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000C   0x.... 0x....      BL       LCD_WrDat
   \   00000010   0x1C76             ADDS     R6,R6,#+1
   \                     ??LCD_Fill_2: (+1)
   \   00000012   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000014   0x2E80             CMP      R6,#+128
   \   00000016   0xDBF7             BLT.N    ??LCD_Fill_1
   \   00000018   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_Fill_0: (+1)
   \   0000001A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000001C   0x2D08             CMP      R5,#+8
   \   0000001E   0xDA0C             BGE.N    ??LCD_Fill_3
   \   00000020   0xF1B5 0x0050      SUBS     R0,R5,#+80
   \   00000024   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   0x.... 0x....      BL       LCD_WrCmd
   \   0000002A   0x2001             MOVS     R0,#+1
   \   0000002C   0x.... 0x....      BL       LCD_WrCmd
   \   00000030   0x2010             MOVS     R0,#+16
   \   00000032   0x.... 0x....      BL       LCD_WrCmd
   \   00000036   0x2600             MOVS     R6,#+0
   \   00000038   0xE7EB             B.N      ??LCD_Fill_2
    385            }
    386          }
   \                     ??LCD_Fill_3: (+1)
   \   0000003A   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
    387          void LCD_CLS(void)
    388          {
   \                     LCD_CLS: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    389            uint8 y,x;	
    390            for(y=0;y<8;y++)
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0xE007             B.N      ??LCD_CLS_0
    391            {
    392              LCD_WrCmd(0xb0+y);
    393              LCD_WrCmd(0x01);
    394              LCD_WrCmd(0x10); 
    395              for(x=0;x<X_WIDTH;x++)
    396                LCD_WrDat(0);
   \                     ??LCD_CLS_1: (+1)
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x.... 0x....      BL       LCD_WrDat
   \   0000000C   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_CLS_2: (+1)
   \   0000000E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000010   0x2D80             CMP      R5,#+128
   \   00000012   0xDBF8             BLT.N    ??LCD_CLS_1
   \   00000014   0x1C64             ADDS     R4,R4,#+1
   \                     ??LCD_CLS_0: (+1)
   \   00000016   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000018   0x2C08             CMP      R4,#+8
   \   0000001A   0xDA0C             BGE.N    ??LCD_CLS_3
   \   0000001C   0xF1B4 0x0050      SUBS     R0,R4,#+80
   \   00000020   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000022   0x.... 0x....      BL       LCD_WrCmd
   \   00000026   0x2001             MOVS     R0,#+1
   \   00000028   0x.... 0x....      BL       LCD_WrCmd
   \   0000002C   0x2010             MOVS     R0,#+16
   \   0000002E   0x.... 0x....      BL       LCD_WrCmd
   \   00000032   0x2500             MOVS     R5,#+0
   \   00000034   0xE7EB             B.N      ??LCD_CLS_2
    397            }
    398          }
   \                     ??LCD_CLS_3: (+1)
   \   00000036   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
    399          void LCD_ClearLine(uint8 y)
    400          {
   \                     LCD_ClearLine: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    401            uint8 x;	
    402            LCD_WrCmd(0xb0+y);
   \   00000002   0x3850             SUBS     R0,R0,#+80
   \   00000004   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000006   0x.... 0x....      BL       LCD_WrCmd
    403            LCD_WrCmd(0x01);
   \   0000000A   0x2001             MOVS     R0,#+1
   \   0000000C   0x.... 0x....      BL       LCD_WrCmd
    404            LCD_WrCmd(0x10); 
   \   00000010   0x2010             MOVS     R0,#+16
   \   00000012   0x.... 0x....      BL       LCD_WrCmd
    405            for(x=0;x<X_WIDTH;x++)
   \   00000016   0x2400             MOVS     R4,#+0
   \   00000018   0xE003             B.N      ??LCD_ClearLine_0
    406              LCD_WrDat(0);
   \                     ??LCD_ClearLine_1: (+1)
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x.... 0x....      BL       LCD_WrDat
   \   00000020   0x1C64             ADDS     R4,R4,#+1
   \                     ??LCD_ClearLine_0: (+1)
   \   00000022   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000024   0x2C80             CMP      R4,#+128
   \   00000026   0xDBF8             BLT.N    ??LCD_ClearLine_1
    407            
    408          }
   \   00000028   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
    409          void LCD_DLY_ms(uint16 ms)
    410          {                         
   \                     LCD_DLY_ms: (+1)
   \   00000000   0xE007             B.N      ??LCD_DLY_ms_0
    411            uint16 a;
    412            while(ms)
    413            {
    414              a=13350;
   \                     ??LCD_DLY_ms_1: (+1)
   \   00000002   0xF243 0x4126      MOVW     R1,#+13350
    415              while(a--);
   \                     ??LCD_DLY_ms_2: (+1)
   \   00000006   0x000A             MOVS     R2,R1
   \   00000008   0x1E51             SUBS     R1,R2,#+1
   \   0000000A   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000000C   0x2A00             CMP      R2,#+0
   \   0000000E   0xD1FA             BNE.N    ??LCD_DLY_ms_2
    416              ms--;
   \   00000010   0x1E40             SUBS     R0,R0,#+1
    417            }
   \                     ??LCD_DLY_ms_0: (+1)
   \   00000012   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD1F4             BNE.N    ??LCD_DLY_ms_1
    418            return;
   \   00000018   0x4770             BX       LR               ;; return
    419          }
    420          

   \                                 In section .text, align 2, keep-with-next
    421          void OLED_Init(void)        
    422          {
   \                     OLED_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    423            
    424            //  //设置PORTA pin14,pin15为GPIO口 
    425            //  D0_GPIO = (0|PORT_PCR_MUX(1));
    426            //  D1_GPIO = (0|PORT_PCR_MUX(1)); 
    427            //  RST_GPIO = (0|PORT_PCR_MUX(1));
    428            //  DC_GPIO = (0|PORT_PCR_MUX(1)); 
    429            //  
    430            //  //设置D0,D1,RST,DC为输出方向
    431            //  D0_DDR = D1_DDR = RST_DDR = DC_DDR = 1;  
    432            GPIO(D0,DIR_OUTPUT);
   \   00000002   0x2101             MOVS     R1,#+1
   \   00000004   0x2063             MOVS     R0,#+99
   \   00000006   0x.... 0x....      BL       GPIO
    433            GPIO(D1,DIR_OUTPUT);
   \   0000000A   0x2101             MOVS     R1,#+1
   \   0000000C   0x2062             MOVS     R0,#+98
   \   0000000E   0x.... 0x....      BL       GPIO
    434            GPIO(RST,DIR_OUTPUT);
   \   00000012   0x2101             MOVS     R1,#+1
   \   00000014   0x2061             MOVS     R0,#+97
   \   00000016   0x.... 0x....      BL       GPIO
    435            GPIO(DC,DIR_OUTPUT);
   \   0000001A   0x2101             MOVS     R1,#+1
   \   0000001C   0x2060             MOVS     R0,#+96
   \   0000001E   0x.... 0x....      BL       GPIO
    436            
    437            /*
    438            gpio_init(PORTC,12,GPO,0);
    439            gpio_init(PORTC,13,GPO,0);
    440            gpio_init(PORTC,14,GPO,0);
    441            gpio_init(PORTC,15,GPO,0);
    442            
    443            gpio_init_struct.GPIO_PTx = PTA;
    444            gpio_init_struct.GPIO_Pins = GPIO_Pin4|GPIO_Pin6|GPIO_Pin8|GPIO_Pin10;
    445            gpio_init_struct.GPIO_Dir = DIR_OUTPUT;
    446            LPLD_GPIO_Init(gpio_init_struct);
    447            */
    448            D0_OUT=1;
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable7_1  ;; 0x43fe180c
   \   00000026   0x2101             MOVS     R1,#+1
   \   00000028   0x6001             STR      R1,[R0, #+0]
    449            D0_OUT=0;
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable7_1  ;; 0x43fe180c
   \   0000002E   0x2100             MOVS     R1,#+0
   \   00000030   0x6001             STR      R1,[R0, #+0]
    450            D1_OUT=1;
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable7_2  ;; 0x43fe1808
   \   00000036   0x2101             MOVS     R1,#+1
   \   00000038   0x6001             STR      R1,[R0, #+0]
    451            D1_OUT=0;
   \   0000003A   0x.... 0x....      LDR.W    R0,??DataTable7_2  ;; 0x43fe1808
   \   0000003E   0x2100             MOVS     R1,#+0
   \   00000040   0x6001             STR      R1,[R0, #+0]
    452            DC_OUT=1;
   \   00000042   0x.... 0x....      LDR.W    R0,??DataTable7  ;; 0x43fe1800
   \   00000046   0x2101             MOVS     R1,#+1
   \   00000048   0x6001             STR      R1,[R0, #+0]
    453            DC_OUT=0;
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable7  ;; 0x43fe1800
   \   0000004E   0x2100             MOVS     R1,#+0
   \   00000050   0x6001             STR      R1,[R0, #+0]
    454            RST_OUT=1;
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable7_3  ;; 0x43fe1804
   \   00000056   0x2101             MOVS     R1,#+1
   \   00000058   0x6001             STR      R1,[R0, #+0]
    455            RST_OUT=0;
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable7_3  ;; 0x43fe1804
   \   0000005E   0x2100             MOVS     R1,#+0
   \   00000060   0x6001             STR      R1,[R0, #+0]
    456            
    457            
    458            
    459            
    460            D0_OUT = 1;
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable7_1  ;; 0x43fe180c
   \   00000066   0x2101             MOVS     R1,#+1
   \   00000068   0x6001             STR      R1,[R0, #+0]
    461            //CS=1;	//预制SLK和SS为高电平   	
    462            RST_OUT = 0;
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable7_3  ;; 0x43fe1804
   \   0000006E   0x2100             MOVS     R1,#+0
   \   00000070   0x6001             STR      R1,[R0, #+0]
    463            LCD_DLY_ms(10);
   \   00000072   0x200A             MOVS     R0,#+10
   \   00000074   0x.... 0x....      BL       LCD_DLY_ms
    464            RST_OUT = 1;
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable7_3  ;; 0x43fe1804
   \   0000007C   0x2101             MOVS     R1,#+1
   \   0000007E   0x6001             STR      R1,[R0, #+0]
    465            
    466            LCD_WrCmd(0xae);//--turn off oled panel
   \   00000080   0x20AE             MOVS     R0,#+174
   \   00000082   0x.... 0x....      BL       LCD_WrCmd
    467            LCD_WrCmd(0x00);//---set low column address
   \   00000086   0x2000             MOVS     R0,#+0
   \   00000088   0x.... 0x....      BL       LCD_WrCmd
    468            LCD_WrCmd(0x10);//---set high column address
   \   0000008C   0x2010             MOVS     R0,#+16
   \   0000008E   0x.... 0x....      BL       LCD_WrCmd
    469            LCD_WrCmd(0x40);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
   \   00000092   0x2040             MOVS     R0,#+64
   \   00000094   0x.... 0x....      BL       LCD_WrCmd
    470            LCD_WrCmd(0x81);//--set contrast control register
   \   00000098   0x2081             MOVS     R0,#+129
   \   0000009A   0x.... 0x....      BL       LCD_WrCmd
    471            LCD_WrCmd(0xcf); // Set SEG Output Current Brightness
   \   0000009E   0x20CF             MOVS     R0,#+207
   \   000000A0   0x.... 0x....      BL       LCD_WrCmd
    472            LCD_WrCmd(0xa1);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
   \   000000A4   0x20A1             MOVS     R0,#+161
   \   000000A6   0x.... 0x....      BL       LCD_WrCmd
    473            LCD_WrCmd(0xc8);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
   \   000000AA   0x20C8             MOVS     R0,#+200
   \   000000AC   0x.... 0x....      BL       LCD_WrCmd
    474            LCD_WrCmd(0xa6);//--set normal display
   \   000000B0   0x20A6             MOVS     R0,#+166
   \   000000B2   0x.... 0x....      BL       LCD_WrCmd
    475            LCD_WrCmd(0xa8);//--set multiplex ratio(1 to 64)
   \   000000B6   0x20A8             MOVS     R0,#+168
   \   000000B8   0x.... 0x....      BL       LCD_WrCmd
    476            LCD_WrCmd(0x3f);//--1/64 duty
   \   000000BC   0x203F             MOVS     R0,#+63
   \   000000BE   0x.... 0x....      BL       LCD_WrCmd
    477            LCD_WrCmd(0xd3);//-set display offset	Shift Mapping RAM Counter (0x00~0x3F)
   \   000000C2   0x20D3             MOVS     R0,#+211
   \   000000C4   0x.... 0x....      BL       LCD_WrCmd
    478            LCD_WrCmd(0x00);//-not offset
   \   000000C8   0x2000             MOVS     R0,#+0
   \   000000CA   0x.... 0x....      BL       LCD_WrCmd
    479            LCD_WrCmd(0xd5);//--set display clock divide ratio/oscillator frequency
   \   000000CE   0x20D5             MOVS     R0,#+213
   \   000000D0   0x.... 0x....      BL       LCD_WrCmd
    480            LCD_WrCmd(0x80);//--set divide ratio, Set Clock as 100 Frames/Sec
   \   000000D4   0x2080             MOVS     R0,#+128
   \   000000D6   0x.... 0x....      BL       LCD_WrCmd
    481            LCD_WrCmd(0xd9);//--set pre-charge period
   \   000000DA   0x20D9             MOVS     R0,#+217
   \   000000DC   0x.... 0x....      BL       LCD_WrCmd
    482            LCD_WrCmd(0xf1);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
   \   000000E0   0x20F1             MOVS     R0,#+241
   \   000000E2   0x.... 0x....      BL       LCD_WrCmd
    483            LCD_WrCmd(0xda);//--set com pins hardware configuration
   \   000000E6   0x20DA             MOVS     R0,#+218
   \   000000E8   0x.... 0x....      BL       LCD_WrCmd
    484            LCD_WrCmd(0x12);
   \   000000EC   0x2012             MOVS     R0,#+18
   \   000000EE   0x.... 0x....      BL       LCD_WrCmd
    485            LCD_WrCmd(0xdb);//--set vcomh
   \   000000F2   0x20DB             MOVS     R0,#+219
   \   000000F4   0x.... 0x....      BL       LCD_WrCmd
    486            LCD_WrCmd(0x40);//Set VCOM Deselect Level
   \   000000F8   0x2040             MOVS     R0,#+64
   \   000000FA   0x.... 0x....      BL       LCD_WrCmd
    487            LCD_WrCmd(0x20);//-Set Page Addressing Mode (0x00/0x01/0x02)
   \   000000FE   0x2020             MOVS     R0,#+32
   \   00000100   0x.... 0x....      BL       LCD_WrCmd
    488            LCD_WrCmd(0x02);//
   \   00000104   0x2002             MOVS     R0,#+2
   \   00000106   0x.... 0x....      BL       LCD_WrCmd
    489            LCD_WrCmd(0x8d);//--set Charge Pump enable/disable
   \   0000010A   0x208D             MOVS     R0,#+141
   \   0000010C   0x.... 0x....      BL       LCD_WrCmd
    490            LCD_WrCmd(0x14);//--set(0x10) disable
   \   00000110   0x2014             MOVS     R0,#+20
   \   00000112   0x.... 0x....      BL       LCD_WrCmd
    491            LCD_WrCmd(0xa4);// Disable Entire Display On (0xa4/0xa5)
   \   00000116   0x20A4             MOVS     R0,#+164
   \   00000118   0x.... 0x....      BL       LCD_WrCmd
    492            LCD_WrCmd(0xa6);// Disable Inverse Display On (0xa6/a7) 
   \   0000011C   0x20A6             MOVS     R0,#+166
   \   0000011E   0x.... 0x....      BL       LCD_WrCmd
    493            LCD_WrCmd(0xaf);//--turn on oled panel
   \   00000122   0x20AF             MOVS     R0,#+175
   \   00000124   0x.... 0x....      BL       LCD_WrCmd
    494            LCD_Fill(0x00);  //初始清屏
   \   00000128   0x2000             MOVS     R0,#+0
   \   0000012A   0x.... 0x....      BL       LCD_Fill
    495            LCD_Set_Pos(0,0);  
   \   0000012E   0x2100             MOVS     R1,#+0
   \   00000130   0x2000             MOVS     R0,#+0
   \   00000132   0x.... 0x....      BL       LCD_Set_Pos
    496            
    497          } 
   \   00000136   0xBD01             POP      {R0,PC}          ;; return
    498          //==============================================================
    499          //函数名： void LCD_PutPixel(uint8 x,uint8 y)
    500          //功能描述：绘制一个点（x,y）
    501          //参数：真实坐标值(x,y),x的范围0～127，y的范围0～64
    502          //返回：无
    503          //==============================================================

   \                                 In section .text, align 2, keep-with-next
    504          void LCD_PutPixel(uint8 x,uint8 y)
    505          {
   \                     LCD_PutPixel: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    506            uint8 data1;  //data1当前点的数据 
    507            
    508            LCD_Set_Pos(x,y); 
   \   00000006   0x0029             MOVS     R1,R5
   \   00000008   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x.... 0x....      BL       LCD_Set_Pos
    509            data1 = 0x01<<(y%8); 	
   \   00000012   0x2001             MOVS     R0,#+1
   \   00000014   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000016   0x2108             MOVS     R1,#+8
   \   00000018   0xFB95 0xF2F1      SDIV     R2,R5,R1
   \   0000001C   0xFB02 0x5211      MLS      R2,R2,R1,R5
   \   00000020   0xFA10 0xF602      LSLS     R6,R0,R2
    510            LCD_WrCmd(0xb0+(y>>3));
   \   00000024   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000026   0x08E8             LSRS     R0,R5,#+3
   \   00000028   0x3850             SUBS     R0,R0,#+80
   \   0000002A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002C   0x.... 0x....      BL       LCD_WrCmd
    511            LCD_WrCmd(((x&0xf0)>>4)|0x10);
   \   00000030   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000032   0x0920             LSRS     R0,R4,#+4
   \   00000034   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   00000038   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003A   0x.... 0x....      BL       LCD_WrCmd
    512            LCD_WrCmd((x&0x0f)|0x00);
   \   0000003E   0xF014 0x000F      ANDS     R0,R4,#0xF
   \   00000042   0x.... 0x....      BL       LCD_WrCmd
    513            LCD_WrDat(data1); 	 	
   \   00000046   0x0030             MOVS     R0,R6
   \   00000048   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004A   0x.... 0x....      BL       LCD_WrDat
    514          }
   \   0000004E   0xBD70             POP      {R4-R6,PC}       ;; return
    515          //==============================================================
    516          //函数名： void LCD_Rectangle(uint8 x1,uint8 y1,
    517          //                   uint8 x2,uint8 y2,uint8 color,uint8 gif)
    518          //功能描述：绘制一个实心矩形
    519          //参数：左上角坐标（x1,y1）,右下角坐标（x2，y2）
    520          //      其中x1、x2的范围0～127，y1，y2的范围0～63，即真实坐标值
    521          //返回：无
    522          //==============================================================

   \                                 In section .text, align 2, keep-with-next
    523          void LCD_Rectangle(uint8 x1,uint8 y1,uint8 x2,uint8 y2,uint8 gif)
    524          {
   \                     LCD_Rectangle: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0005             MOVS     R5,R0
   \   00000006   0x000E             MOVS     R6,R1
   \   00000008   0x0017             MOVS     R7,R2
   \   0000000A   0x4698             MOV      R8,R3
    525            uint8 n; 
    526            
    527            LCD_Set_Pos(x1,y1>>3);
   \   0000000C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000000E   0x08F1             LSRS     R1,R6,#+3
   \   00000010   0x0028             MOVS     R0,R5
   \   00000012   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000014   0x.... 0x....      BL       LCD_Set_Pos
    528            for(n=x1;n<=x2;n++)
   \   00000018   0x46A9             MOV      R9,R5
   \   0000001A   0x9C08             LDR      R4,[SP, #+32]
   \   0000001C   0xE012             B.N      ??LCD_Rectangle_0
    529            {
    530              LCD_WrDat(0x01<<(y1%8)); 			
   \                     ??LCD_Rectangle_1: (+1)
   \   0000001E   0x2001             MOVS     R0,#+1
   \   00000020   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000022   0x2108             MOVS     R1,#+8
   \   00000024   0xFB96 0xF2F1      SDIV     R2,R6,R1
   \   00000028   0xFB02 0x6211      MLS      R2,R2,R1,R6
   \   0000002C   0x4090             LSLS     R0,R0,R2
   \   0000002E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000030   0x.... 0x....      BL       LCD_WrDat
    531              if(gif == 1) 	LCD_DLY_ms(50);
   \   00000034   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000036   0x2C01             CMP      R4,#+1
   \   00000038   0xD102             BNE.N    ??LCD_Rectangle_2
   \   0000003A   0x2032             MOVS     R0,#+50
   \   0000003C   0x.... 0x....      BL       LCD_DLY_ms
    532            }  
   \                     ??LCD_Rectangle_2: (+1)
   \   00000040   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_Rectangle_0: (+1)
   \   00000044   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000046   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000004A   0x454F             CMP      R7,R9
   \   0000004C   0xD2E7             BCS.N    ??LCD_Rectangle_1
    533            LCD_Set_Pos(x1,y2>>3);
   \   0000004E   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000052   0xEA5F 0x01D8      LSRS     R1,R8,#+3
   \   00000056   0x0028             MOVS     R0,R5
   \   00000058   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005A   0x.... 0x....      BL       LCD_Set_Pos
    534            for(n=x1;n<=x2;n++)
   \   0000005E   0x46A9             MOV      R9,R5
   \   00000060   0xE013             B.N      ??LCD_Rectangle_3
    535            {
    536              LCD_WrDat(0x01<<(y2%8)); 			
   \                     ??LCD_Rectangle_4: (+1)
   \   00000062   0x2001             MOVS     R0,#+1
   \   00000064   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000068   0x2108             MOVS     R1,#+8
   \   0000006A   0xFB98 0xF2F1      SDIV     R2,R8,R1
   \   0000006E   0xFB02 0x8211      MLS      R2,R2,R1,R8
   \   00000072   0x4090             LSLS     R0,R0,R2
   \   00000074   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000076   0x.... 0x....      BL       LCD_WrDat
    537              if(gif == 1) 	LCD_DLY_ms(5);
   \   0000007A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000007C   0x2C01             CMP      R4,#+1
   \   0000007E   0xD102             BNE.N    ??LCD_Rectangle_5
   \   00000080   0x2005             MOVS     R0,#+5
   \   00000082   0x.... 0x....      BL       LCD_DLY_ms
    538            }
   \                     ??LCD_Rectangle_5: (+1)
   \   00000086   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_Rectangle_3: (+1)
   \   0000008A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000008C   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000090   0x454F             CMP      R7,R9
   \   00000092   0xD2E6             BCS.N    ??LCD_Rectangle_4
    539            
    540          }  
   \   00000094   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    541          //==============================================================
    542          //函数名：LCD_P6x8Str(uint8 x,uint8 y,uint8 *p)
    543          //功能描述：写入一组标准ASCII字符串
    544          //参数：显示的位置（x,y），y为页范围0～7，要显示的字符串
    545          //返回：无
    546          //==============================================================  

   \                                 In section .text, align 2, keep-with-next
    547          void LCD_P6x8Str(uint8 x,uint8 y,uint8 ch[])
    548          {
   \                     LCD_P6x8Str: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
    549            uint8 c=0,i=0,j=0;      
   \   0000000A   0x2700             MOVS     R7,#+0
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
   \   00000010   0xF05F 0x0900      MOVS     R9,#+0
   \   00000014   0xE015             B.N      ??LCD_P6x8Str_0
    550            while (ch[j]!='\0')
    551            {    
    552              c =ch[j]-32;
    553              if(x>126){x=0;y++;}
    554              LCD_Set_Pos(x,y);    
    555              for(i=0;i<6;i++)     
    556                LCD_WrDat(F6x8[c][i]);  
   \                     ??LCD_P6x8Str_1: (+1)
   \   00000016   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000001A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000001C   0x2006             MOVS     R0,#+6
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable7_4
   \   00000022   0xFB00 0x1007      MLA      R0,R0,R7,R1
   \   00000026   0xF818 0x0000      LDRB     R0,[R8, R0]
   \   0000002A   0x.... 0x....      BL       LCD_WrDat
   \   0000002E   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??LCD_P6x8Str_2: (+1)
   \   00000032   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000036   0xF1B8 0x0F06      CMP      R8,#+6
   \   0000003A   0xDBEC             BLT.N    ??LCD_P6x8Str_1
    557              x+=6;
   \   0000003C   0x1DA4             ADDS     R4,R4,#+6
    558              j++;
   \   0000003E   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_P6x8Str_0: (+1)
   \   00000042   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000046   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   0000004A   0x2800             CMP      R0,#+0
   \   0000004C   0xD013             BEQ.N    ??LCD_P6x8Str_3
   \   0000004E   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000052   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   00000056   0xF1B0 0x0720      SUBS     R7,R0,#+32
   \   0000005A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000005C   0x2C7F             CMP      R4,#+127
   \   0000005E   0xDB01             BLT.N    ??LCD_P6x8Str_4
   \   00000060   0x2400             MOVS     R4,#+0
   \   00000062   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_P6x8Str_4: (+1)
   \   00000064   0x0029             MOVS     R1,R5
   \   00000066   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000068   0x0020             MOVS     R0,R4
   \   0000006A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006C   0x.... 0x....      BL       LCD_Set_Pos
   \   00000070   0xF05F 0x0800      MOVS     R8,#+0
   \   00000074   0xE7DD             B.N      ??LCD_P6x8Str_2
    559            }
    560          }
   \                     ??LCD_P6x8Str_3: (+1)
   \   00000076   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    561          //==============================================================
    562          //函数名：LCD_P6x8Str(uint8 x,uint8 y,uint8 *p)
    563          //功能描述：写入一组标准ASCII字符串
    564          //参数：显示的位置（x,y），y为页范围0～7，要显示的字符串
    565          //返回：无
    566          //==============================================================  

   \                                 In section .text, align 2, keep-with-next
    567          void LCD_P6x8StrW(uint8 x,uint8 y,uint8 ch[])
    568          {
   \                     LCD_P6x8StrW: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
    569            uint8 c=0,i=0,j=0;      
   \   0000000A   0x2700             MOVS     R7,#+0
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
   \   00000010   0xF05F 0x0900      MOVS     R9,#+0
   \   00000014   0xE017             B.N      ??LCD_P6x8StrW_0
    570            while (ch[j]!='\0')
    571            {    
    572              c =ch[j]-32;
    573              if(x>126){x=0;y++;}
    574              LCD_Set_Pos(x,y);    
    575              for(i=0;i<6;i++)     
    576                LCD_WrDat(0xFF-F6x8[c][i]);  
   \                     ??LCD_P6x8StrW_1: (+1)
   \   00000016   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000001A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000001C   0x2006             MOVS     R0,#+6
   \   0000001E   0x....             LDR.N    R1,??DataTable7_4
   \   00000020   0xFB00 0x1007      MLA      R0,R0,R7,R1
   \   00000024   0xF818 0x0000      LDRB     R0,[R8, R0]
   \   00000028   0xF1D0 0x00FF      RSBS     R0,R0,#+255
   \   0000002C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002E   0x.... 0x....      BL       LCD_WrDat
   \   00000032   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??LCD_P6x8StrW_2: (+1)
   \   00000036   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000003A   0xF1B8 0x0F06      CMP      R8,#+6
   \   0000003E   0xDBEA             BLT.N    ??LCD_P6x8StrW_1
    577              x+=6;
   \   00000040   0x1DA4             ADDS     R4,R4,#+6
    578              j++;
   \   00000042   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_P6x8StrW_0: (+1)
   \   00000046   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000004A   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   0000004E   0x2800             CMP      R0,#+0
   \   00000050   0xD013             BEQ.N    ??LCD_P6x8StrW_3
   \   00000052   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000056   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   0000005A   0xF1B0 0x0720      SUBS     R7,R0,#+32
   \   0000005E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000060   0x2C7F             CMP      R4,#+127
   \   00000062   0xDB01             BLT.N    ??LCD_P6x8StrW_4
   \   00000064   0x2400             MOVS     R4,#+0
   \   00000066   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_P6x8StrW_4: (+1)
   \   00000068   0x0029             MOVS     R1,R5
   \   0000006A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000006C   0x0020             MOVS     R0,R4
   \   0000006E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000070   0x.... 0x....      BL       LCD_Set_Pos
   \   00000074   0xF05F 0x0800      MOVS     R8,#+0
   \   00000078   0xE7DD             B.N      ??LCD_P6x8StrW_2
    579            }
    580          }
   \                     ??LCD_P6x8StrW_3: (+1)
   \   0000007A   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    581          //==============================================================
    582          //函数名：LCD_P8x16Str(uint8 x,uint8 y,uint8 *p)
    583          //功能描述：写入一组标准ASCII字符串
    584          //参数：显示的位置（x,y），y为页范围0～7，要显示的字符串
    585          //返回：无
    586          //==============================================================  

   \                                 In section .text, align 2, keep-with-next
    587          void LCD_P8x16Str(uint8 x,uint8 y,uint8 ch[])
    588          {
   \                     LCD_P8x16Str: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
    589            uint8 c=0,i=0,j=0;
   \   0000000A   0x2700             MOVS     R7,#+0
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
   \   00000010   0xF05F 0x0900      MOVS     R9,#+0
   \   00000014   0xE012             B.N      ??LCD_P8x16Str_0
    590            
    591            while (ch[j]!='\0')
    592            {    
    593              c =ch[j]-32;
    594              if(x>120){x=0;y++;}
    595              LCD_Set_Pos(x,y);    
    596              for(i=0;i<8;i++)     
    597                LCD_WrDat(F8X16[c*16+i]);
    598              LCD_Set_Pos(x,y+1);    
    599              for(i=0;i<8;i++)     
    600                LCD_WrDat(F8X16[c*16+i+8]);  
   \                     ??LCD_P8x16Str_1: (+1)
   \   00000016   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000018   0x0138             LSLS     R0,R7,#+4
   \   0000001A   0xFA50 0xF088      UXTAB    R0,R0,R8
   \   0000001E   0x....             LDR.N    R1,??DataTable7_5
   \   00000020   0x1840             ADDS     R0,R0,R1
   \   00000022   0x7A00             LDRB     R0,[R0, #+8]
   \   00000024   0x.... 0x....      BL       LCD_WrDat
   \   00000028   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??LCD_P8x16Str_2: (+1)
   \   0000002C   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000030   0xF1B8 0x0F08      CMP      R8,#+8
   \   00000034   0xDBEF             BLT.N    ??LCD_P8x16Str_1
    601              x+=8;
   \   00000036   0x3408             ADDS     R4,R4,#+8
    602              j++;
   \   00000038   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_P8x16Str_0: (+1)
   \   0000003C   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000040   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   00000044   0x2800             CMP      R0,#+0
   \   00000046   0xD02B             BEQ.N    ??LCD_P8x16Str_3
   \   00000048   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000004C   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   00000050   0xF1B0 0x0720      SUBS     R7,R0,#+32
   \   00000054   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000056   0x2C79             CMP      R4,#+121
   \   00000058   0xDB01             BLT.N    ??LCD_P8x16Str_4
   \   0000005A   0x2400             MOVS     R4,#+0
   \   0000005C   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_P8x16Str_4: (+1)
   \   0000005E   0x0029             MOVS     R1,R5
   \   00000060   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000062   0x0020             MOVS     R0,R4
   \   00000064   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000066   0x.... 0x....      BL       LCD_Set_Pos
   \   0000006A   0xF05F 0x0800      MOVS     R8,#+0
   \   0000006E   0xE009             B.N      ??LCD_P8x16Str_5
   \                     ??LCD_P8x16Str_6: (+1)
   \   00000070   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000072   0x0138             LSLS     R0,R7,#+4
   \   00000074   0xFA50 0xF088      UXTAB    R0,R0,R8
   \   00000078   0x....             LDR.N    R1,??DataTable7_5
   \   0000007A   0x5C40             LDRB     R0,[R0, R1]
   \   0000007C   0x.... 0x....      BL       LCD_WrDat
   \   00000080   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??LCD_P8x16Str_5: (+1)
   \   00000084   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000088   0xF1B8 0x0F08      CMP      R8,#+8
   \   0000008C   0xDBF0             BLT.N    ??LCD_P8x16Str_6
   \   0000008E   0x1C69             ADDS     R1,R5,#+1
   \   00000090   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000092   0x0020             MOVS     R0,R4
   \   00000094   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000096   0x.... 0x....      BL       LCD_Set_Pos
   \   0000009A   0xF05F 0x0800      MOVS     R8,#+0
   \   0000009E   0xE7C5             B.N      ??LCD_P8x16Str_2
    603            }
    604          }
   \                     ??LCD_P8x16Str_3: (+1)
   \   000000A0   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    605          //输出汉字字符串

   \                                 In section .text, align 2, keep-with-next
    606          void LCD_P14x16Str(uint8 x,uint8 y,uint8 ch[])
    607          {
   \                     LCD_P14x16Str: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0006             MOVS     R6,R0
   \   00000006   0x000C             MOVS     R4,R1
   \   00000008   0x0015             MOVS     R5,R2
    608            uint8 wm=0,ii = 0;
   \   0000000A   0xF05F 0x0900      MOVS     R9,#+0
   \   0000000E   0x2700             MOVS     R7,#+0
    609            uint16 adder=1; 
   \   00000010   0xF05F 0x0801      MOVS     R8,#+1
   \   00000014   0xE00B             B.N      ??LCD_P14x16Str_0
    610            
    611            while(ch[ii] != '\0')
    612            {
    613              wm = 0;
    614              adder = 1;
    615              while(F14x16_Idx[wm] > 127)
    616              {
    617                if(F14x16_Idx[wm] == ch[ii])
    618                {
    619                  if(F14x16_Idx[wm + 1] == ch[ii + 1])
    620                  {
    621                    adder = wm * 14;
    622                    break;
    623                  }
    624                }
    625                wm += 2;			
    626              }
    627              if(x>118){x=0;y++;}
    628              LCD_Set_Pos(x , y); 
    629              if(adder != 1)// 显示汉字					
    630              {
    631                LCD_Set_Pos(x , y);
    632                for(wm = 0;wm < 14;wm++)               
    633                {
    634                  LCD_WrDat(F14x16[adder]);	
    635                  adder += 1;
    636                }      
    637                LCD_Set_Pos(x,y + 1); 
    638                for(wm = 0;wm < 14;wm++)          
    639                {
    640                  LCD_WrDat(F14x16[adder]);
    641                  adder += 1;
    642                }   		
    643              }
    644              else			  //显示空白字符			
    645              {
    646                ii += 1;
    647                LCD_Set_Pos(x,y);
    648                for(wm = 0;wm < 16;wm++)
    649                {
    650                  LCD_WrDat(0);
    651                }
    652                LCD_Set_Pos(x,y + 1);
    653                for(wm = 0;wm < 16;wm++)
    654                {   		
    655                  LCD_WrDat(0);	
   \                     ??LCD_P14x16Str_1: (+1)
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x.... 0x....      BL       LCD_WrDat
    656                }
   \   0000001C   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_P14x16Str_2: (+1)
   \   00000020   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000024   0xF1B9 0x0F10      CMP      R9,#+16
   \   00000028   0xDBF5             BLT.N    ??LCD_P14x16Str_1
    657              }
    658              x += 14;
   \                     ??LCD_P14x16Str_3: (+1)
   \   0000002A   0x360E             ADDS     R6,R6,#+14
    659              ii += 2;
   \   0000002C   0x1CBF             ADDS     R7,R7,#+2
   \                     ??LCD_P14x16Str_0: (+1)
   \   0000002E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000030   0x5D78             LDRB     R0,[R7, R5]
   \   00000032   0x2800             CMP      R0,#+0
   \   00000034   0xF000 0x8086      BEQ.W    ??LCD_P14x16Str_4
   \   00000038   0xF05F 0x0900      MOVS     R9,#+0
   \   0000003C   0xF05F 0x0801      MOVS     R8,#+1
   \   00000040   0xE001             B.N      ??LCD_P14x16Str_5
   \                     ??LCD_P14x16Str_6: (+1)
   \   00000042   0xF119 0x0902      ADDS     R9,R9,#+2
   \                     ??LCD_P14x16Str_5: (+1)
   \   00000046   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000004A   0x....             LDR.N    R0,??DataTable7_6
   \   0000004C   0xF819 0x0000      LDRB     R0,[R9, R0]
   \   00000050   0x2880             CMP      R0,#+128
   \   00000052   0xDB18             BLT.N    ??LCD_P14x16Str_7
   \   00000054   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000058   0x....             LDR.N    R0,??DataTable7_6
   \   0000005A   0xF819 0x0000      LDRB     R0,[R9, R0]
   \   0000005E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000060   0x5D79             LDRB     R1,[R7, R5]
   \   00000062   0x4288             CMP      R0,R1
   \   00000064   0xD1ED             BNE.N    ??LCD_P14x16Str_6
   \   00000066   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000006A   0x....             LDR.N    R0,??DataTable7_6
   \   0000006C   0xEB19 0x0000      ADDS     R0,R9,R0
   \   00000070   0x7840             LDRB     R0,[R0, #+1]
   \   00000072   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000074   0x1979             ADDS     R1,R7,R5
   \   00000076   0x7849             LDRB     R1,[R1, #+1]
   \   00000078   0x4288             CMP      R0,R1
   \   0000007A   0xD1E2             BNE.N    ??LCD_P14x16Str_6
   \   0000007C   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000080   0x200E             MOVS     R0,#+14
   \   00000082   0xFB19 0xF800      SMULBB   R8,R9,R0
   \                     ??LCD_P14x16Str_7: (+1)
   \   00000086   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000088   0x2E77             CMP      R6,#+119
   \   0000008A   0xDB01             BLT.N    ??LCD_P14x16Str_8
   \   0000008C   0x2600             MOVS     R6,#+0
   \   0000008E   0x1C64             ADDS     R4,R4,#+1
   \                     ??LCD_P14x16Str_8: (+1)
   \   00000090   0x0021             MOVS     R1,R4
   \   00000092   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000094   0x0030             MOVS     R0,R6
   \   00000096   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000098   0x.... 0x....      BL       LCD_Set_Pos
   \   0000009C   0xFA1F 0xF888      UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
   \   000000A0   0xF1B8 0x0F01      CMP      R8,#+1
   \   000000A4   0xD031             BEQ.N    ??LCD_P14x16Str_9
   \   000000A6   0x0021             MOVS     R1,R4
   \   000000A8   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000AA   0x0030             MOVS     R0,R6
   \   000000AC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000AE   0x.... 0x....      BL       LCD_Set_Pos
   \   000000B2   0xF05F 0x0900      MOVS     R9,#+0
   \   000000B6   0xE00A             B.N      ??LCD_P14x16Str_10
   \                     ??LCD_P14x16Str_11: (+1)
   \   000000B8   0xFA1F 0xF888      UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
   \   000000BC   0x....             LDR.N    R0,??DataTable7_7
   \   000000BE   0xF818 0x0000      LDRB     R0,[R8, R0]
   \   000000C2   0x.... 0x....      BL       LCD_WrDat
   \   000000C6   0xF118 0x0801      ADDS     R8,R8,#+1
   \   000000CA   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_P14x16Str_10: (+1)
   \   000000CE   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   000000D2   0xF1B9 0x0F0E      CMP      R9,#+14
   \   000000D6   0xDBEF             BLT.N    ??LCD_P14x16Str_11
   \   000000D8   0x1C61             ADDS     R1,R4,#+1
   \   000000DA   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000DC   0x0030             MOVS     R0,R6
   \   000000DE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000E0   0x.... 0x....      BL       LCD_Set_Pos
   \   000000E4   0xF05F 0x0900      MOVS     R9,#+0
   \                     ??LCD_P14x16Str_12: (+1)
   \   000000E8   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   000000EC   0xF1B9 0x0F0E      CMP      R9,#+14
   \   000000F0   0xDA9B             BGE.N    ??LCD_P14x16Str_3
   \   000000F2   0xFA1F 0xF888      UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
   \   000000F6   0x....             LDR.N    R0,??DataTable7_7
   \   000000F8   0xF818 0x0000      LDRB     R0,[R8, R0]
   \   000000FC   0x.... 0x....      BL       LCD_WrDat
   \   00000100   0xF118 0x0801      ADDS     R8,R8,#+1
   \   00000104   0xF119 0x0901      ADDS     R9,R9,#+1
   \   00000108   0xE7EE             B.N      ??LCD_P14x16Str_12
   \                     ??LCD_P14x16Str_9: (+1)
   \   0000010A   0x1C7F             ADDS     R7,R7,#+1
   \   0000010C   0x0021             MOVS     R1,R4
   \   0000010E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000110   0x0030             MOVS     R0,R6
   \   00000112   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000114   0x.... 0x....      BL       LCD_Set_Pos
   \   00000118   0xF05F 0x0900      MOVS     R9,#+0
   \   0000011C   0xE004             B.N      ??LCD_P14x16Str_13
   \                     ??LCD_P14x16Str_14: (+1)
   \   0000011E   0x2000             MOVS     R0,#+0
   \   00000120   0x.... 0x....      BL       LCD_WrDat
   \   00000124   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_P14x16Str_13: (+1)
   \   00000128   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000012C   0xF1B9 0x0F10      CMP      R9,#+16
   \   00000130   0xDBF5             BLT.N    ??LCD_P14x16Str_14
   \   00000132   0x1C61             ADDS     R1,R4,#+1
   \   00000134   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000136   0x0030             MOVS     R0,R6
   \   00000138   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000013A   0x.... 0x....      BL       LCD_Set_Pos
   \   0000013E   0xF05F 0x0900      MOVS     R9,#+0
   \   00000142   0xE76D             B.N      ??LCD_P14x16Str_2
    660            }
    661          }
   \                     ??LCD_P14x16Str_4: (+1)
   \   00000144   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
    662          void LCD_P16x16Ch(uint8 x,uint8 y,uint8 ch[])
    663          {
   \                     LCD_P16x16Ch: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
    664            uint8 wm=0;
   \   0000000A   0x2700             MOVS     R7,#+0
    665            uint16 adder=0; 
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
    666            
    667            LCD_Set_Pos(x , y);
   \   00000010   0x0029             MOVS     R1,R5
   \   00000012   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000014   0x0020             MOVS     R0,R4
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x.... 0x....      BL       LCD_Set_Pos
    668            for(wm = 0;wm < 16;wm++)               
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0x0007             MOVS     R7,R0
   \   00000020   0xE008             B.N      ??LCD_P16x16Ch_0
    669            {
    670              LCD_WrDat(ch[adder]);	
   \                     ??LCD_P16x16Ch_1: (+1)
   \   00000022   0xFA1F 0xF888      UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
   \   00000026   0xF818 0x0006      LDRB     R0,[R8, R6]
   \   0000002A   0x.... 0x....      BL       LCD_WrDat
    671              adder ++;
   \   0000002E   0xF118 0x0801      ADDS     R8,R8,#+1
    672            }      
   \   00000032   0x1C7F             ADDS     R7,R7,#+1
   \                     ??LCD_P16x16Ch_0: (+1)
   \   00000034   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000036   0x2F10             CMP      R7,#+16
   \   00000038   0xDBF3             BLT.N    ??LCD_P16x16Ch_1
    673            LCD_Set_Pos(x,y + 1); 
   \   0000003A   0x1C69             ADDS     R1,R5,#+1
   \   0000003C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000003E   0x0020             MOVS     R0,R4
   \   00000040   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000042   0x.... 0x....      BL       LCD_Set_Pos
    674            for(wm = 0;wm < 16;wm++)          
   \   00000046   0x2700             MOVS     R7,#+0
   \   00000048   0xE008             B.N      ??LCD_P16x16Ch_2
    675            {
    676              LCD_WrDat(ch[adder]);
   \                     ??LCD_P16x16Ch_3: (+1)
   \   0000004A   0xFA1F 0xF888      UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
   \   0000004E   0xF818 0x0006      LDRB     R0,[R8, R6]
   \   00000052   0x.... 0x....      BL       LCD_WrDat
    677              adder ++;
   \   00000056   0xF118 0x0801      ADDS     R8,R8,#+1
    678            }
   \   0000005A   0x1C7F             ADDS     R7,R7,#+1
   \                     ??LCD_P16x16Ch_2: (+1)
   \   0000005C   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000005E   0x2F10             CMP      R7,#+16
   \   00000060   0xDBF3             BLT.N    ??LCD_P16x16Ch_3
    679            
    680          }
   \   00000062   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    681          

   \                                 In section .text, align 2, keep-with-next
    682          void LCD_P16x16Str(uint8 x,uint8 y,uint8 ch[])
    683          {
   \                     LCD_P16x16Str: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0006             MOVS     R6,R0
   \   00000006   0x000C             MOVS     R4,R1
   \   00000008   0x0015             MOVS     R5,R2
    684            uint8 ii=0;
   \   0000000A   0x2700             MOVS     R7,#+0
   \   0000000C   0xE00E             B.N      ??LCD_P16x16Str_0
    685            while(ch[ii] != '\0')
    686            {
    687              uint8 wm=0;
    688              uint8* ch_ptr;
    689              uint32 ch_addr;
    690              ch_addr = 0x40000+(94*(ch[ii]-0xA1)+ch[ii+1]-0xA1)*32;
    691              ch_ptr = (uint8*)ch_addr;
    692              LCD_Set_Pos(x , y);
    693              for(wm = 0;wm < 16;wm++)               
    694              {
    695                LCD_WrDat(*ch_ptr);	
    696                ch_ptr ++;
    697              }      
    698              LCD_Set_Pos(x,y + 1); 
    699              for(wm = 0;wm < 16;wm++)          
    700              {
    701                LCD_WrDat(*ch_ptr);
   \                     ??LCD_P16x16Str_1: (+1)
   \   0000000E   0xF899 0x0000      LDRB     R0,[R9, #+0]
   \   00000012   0x.... 0x....      BL       LCD_WrDat
    702                ch_ptr ++;
   \   00000016   0xF119 0x0901      ADDS     R9,R9,#+1
    703              }
   \   0000001A   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??LCD_P16x16Str_2: (+1)
   \   0000001E   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000022   0xF1B8 0x0F10      CMP      R8,#+16
   \   00000026   0xDBF2             BLT.N    ??LCD_P16x16Str_1
    704              x += 16;
   \   00000028   0x3610             ADDS     R6,R6,#+16
    705              ii += 2;
   \   0000002A   0x1CBF             ADDS     R7,R7,#+2
   \                     ??LCD_P16x16Str_0: (+1)
   \   0000002C   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000002E   0x5D78             LDRB     R0,[R7, R5]
   \   00000030   0x2800             CMP      R0,#+0
   \   00000032   0xD02B             BEQ.N    ??LCD_P16x16Str_3
   \   00000034   0xF05F 0x0800      MOVS     R8,#+0
   \   00000038   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000003A   0x5D78             LDRB     R0,[R7, R5]
   \   0000003C   0x215E             MOVS     R1,#+94
   \   0000003E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000040   0x197A             ADDS     R2,R7,R5
   \   00000042   0x7852             LDRB     R2,[R2, #+1]
   \   00000044   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   00000048   0x....             LDR.N    R1,??DataTable7_8  ;; 0xfffc8820
   \   0000004A   0xEB11 0x1940      ADDS     R9,R1,R0, LSL #+5
   \   0000004E   0x0021             MOVS     R1,R4
   \   00000050   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000052   0x0030             MOVS     R0,R6
   \   00000054   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000056   0x.... 0x....      BL       LCD_Set_Pos
   \   0000005A   0x2000             MOVS     R0,#+0
   \   0000005C   0x4680             MOV      R8,R0
   \   0000005E   0xE007             B.N      ??LCD_P16x16Str_4
   \                     ??LCD_P16x16Str_5: (+1)
   \   00000060   0xF899 0x0000      LDRB     R0,[R9, #+0]
   \   00000064   0x.... 0x....      BL       LCD_WrDat
   \   00000068   0xF119 0x0901      ADDS     R9,R9,#+1
   \   0000006C   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??LCD_P16x16Str_4: (+1)
   \   00000070   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000074   0xF1B8 0x0F10      CMP      R8,#+16
   \   00000078   0xDBF2             BLT.N    ??LCD_P16x16Str_5
   \   0000007A   0x1C61             ADDS     R1,R4,#+1
   \   0000007C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000007E   0x0030             MOVS     R0,R6
   \   00000080   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000082   0x.... 0x....      BL       LCD_Set_Pos
   \   00000086   0xF05F 0x0800      MOVS     R8,#+0
   \   0000008A   0xE7C8             B.N      ??LCD_P16x16Str_2
    706            }
    707            
    708          }
   \                     ??LCD_P16x16Str_3: (+1)
   \   0000008C   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    709          //输出汉字和字符混合字符串

   \                                 In section .text, align 2, keep-with-next
    710          void LCD_Print(uint8 x, uint8 y, uint8 ch[])
    711          {
   \                     LCD_Print: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
    712            uint8 ch2[3];
    713            uint8 ii=0;        
   \   00000008   0x2700             MOVS     R7,#+0
   \   0000000A   0xE014             B.N      ??LCD_Print_0
    714            while(ch[ii] != '\0')
    715            {
    716              if(ch[ii] > 127)
    717              {
    718                ch2[0] = ch[ii];
   \                     ??LCD_Print_1: (+1)
   \   0000000C   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000000E   0x5DB8             LDRB     R0,[R7, R6]
   \   00000010   0xF88D 0x0000      STRB     R0,[SP, #+0]
    719                ch2[1] = ch[ii + 1];
   \   00000014   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000016   0x19B8             ADDS     R0,R7,R6
   \   00000018   0x7840             LDRB     R0,[R0, #+1]
   \   0000001A   0xF88D 0x0001      STRB     R0,[SP, #+1]
    720                ch2[2] = '\0';			//汉字为两个字节
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0xF88D 0x0002      STRB     R0,[SP, #+2]
    721                LCD_P16x16Str(x , y, ch2);	//显示汉字
   \   00000024   0xAA00             ADD      R2,SP,#+0
   \   00000026   0x0029             MOVS     R1,R5
   \   00000028   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000002A   0x0020             MOVS     R0,R4
   \   0000002C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002E   0x.... 0x....      BL       LCD_P16x16Str
    722                x += 14;
   \   00000032   0x340E             ADDS     R4,R4,#+14
    723                ii += 2;
   \   00000034   0x1CBF             ADDS     R7,R7,#+2
    724              }
   \                     ??LCD_Print_0: (+1)
   \   00000036   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000038   0x5DB8             LDRB     R0,[R7, R6]
   \   0000003A   0x2800             CMP      R0,#+0
   \   0000003C   0xD014             BEQ.N    ??LCD_Print_2
   \   0000003E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000040   0x5DB8             LDRB     R0,[R7, R6]
   \   00000042   0x2880             CMP      R0,#+128
   \   00000044   0xDAE2             BGE.N    ??LCD_Print_1
    725              else
    726              {
    727                ch2[0] = ch[ii];	
   \   00000046   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000048   0x5DB8             LDRB     R0,[R7, R6]
   \   0000004A   0xF88D 0x0000      STRB     R0,[SP, #+0]
    728                ch2[1] = '\0';			//字母占一个字节
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0xF88D 0x0001      STRB     R0,[SP, #+1]
    729                LCD_P8x16Str(x , y , ch2);	//显示字母
   \   00000054   0xAA00             ADD      R2,SP,#+0
   \   00000056   0x0029             MOVS     R1,R5
   \   00000058   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000005A   0x0020             MOVS     R0,R4
   \   0000005C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005E   0x.... 0x....      BL       LCD_P8x16Str
    730                x += 8;
   \   00000062   0x3408             ADDS     R4,R4,#+8
    731                ii+= 1;
   \   00000064   0x1C7F             ADDS     R7,R7,#+1
   \   00000066   0xE7E6             B.N      ??LCD_Print_0
    732              }
    733            }
    734          } 
   \                     ??LCD_Print_2: (+1)
   \   00000068   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    735          
    736          //==============================================================
    737          //函数名： void Draw_BMP(uint8 x,uint8 y)
    738          //功能描述：显示BMP图片128×64
    739          //参数：起始点坐标(x,y),x的范围0～127，y为页的范围0～7
    740          //返回：无
    741          //==============================================================

   \                                 In section .text, align 2, keep-with-next
    742          void Draw_BMP(uint8 x0,uint8 y0,uint8 x1,uint8 y1,uint8 bmp[])
    743          { 	
   \                     Draw_BMP: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x0015             MOVS     R5,R2
   \   00000008   0x001E             MOVS     R6,R3
    744            uint16 ii=0;
   \   0000000A   0x2700             MOVS     R7,#+0
    745            uint8 x,y;
    746            
    747            if(y1%8==0) y=y1/8;      
   \   0000000C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000000E   0x2008             MOVS     R0,#+8
   \   00000010   0xFB96 0xF2F0      SDIV     R2,R6,R0
   \   00000014   0xFB02 0x6210      MLS      R2,R2,R0,R6
   \   00000018   0x2A00             CMP      R2,#+0
   \   0000001A   0xD104             BNE.N    ??Draw_BMP_0
   \   0000001C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000001E   0x2008             MOVS     R0,#+8
   \   00000020   0xFB96 0xFAF0      SDIV     R10,R6,R0
   \   00000024   0xE005             B.N      ??Draw_BMP_1
    748            else y=y1/8+1;
   \                     ??Draw_BMP_0: (+1)
   \   00000026   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000028   0x2008             MOVS     R0,#+8
   \   0000002A   0xFB96 0xF0F0      SDIV     R0,R6,R0
   \   0000002E   0xF110 0x0A01      ADDS     R10,R0,#+1
    749            for(y=y0;y<=y1;y++)
   \                     ??Draw_BMP_1: (+1)
   \   00000032   0x468A             MOV      R10,R1
   \   00000034   0xF8DD 0x8020      LDR      R8,[SP, #+32]
   \   00000038   0xE00E             B.N      ??Draw_BMP_2
    750            {
    751              LCD_Set_Pos(x0,y);				
    752              for(x=x0;x<x1;x++)
    753              {      
    754                LCD_WrDat(bmp[ii++]);	    	
   \                     ??Draw_BMP_3: (+1)
   \   0000003A   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   0000003C   0xF817 0x0008      LDRB     R0,[R7, R8]
   \   00000040   0x.... 0x....      BL       LCD_WrDat
   \   00000044   0x1C7F             ADDS     R7,R7,#+1
    755              }
   \   00000046   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??Draw_BMP_4: (+1)
   \   0000004A   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000004E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000050   0x45A9             CMP      R9,R5
   \   00000052   0xD3F2             BCC.N    ??Draw_BMP_3
   \   00000054   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \                     ??Draw_BMP_2: (+1)
   \   00000058   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000005A   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   0000005E   0x4556             CMP      R6,R10
   \   00000060   0xD307             BCC.N    ??Draw_BMP_5
   \   00000062   0x4651             MOV      R1,R10
   \   00000064   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000066   0x0020             MOVS     R0,R4
   \   00000068   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006A   0x.... 0x....      BL       LCD_Set_Pos
   \   0000006E   0x46A1             MOV      R9,R4
   \   00000070   0xE7EB             B.N      ??Draw_BMP_4
    756            }
    757          }
   \                     ??Draw_BMP_5: (+1)
   \   00000072   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x43FE1800         DC32     0x43fe1800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   0x43FE180C         DC32     0x43fe180c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   0x43FE1808         DC32     0x43fe1808

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \   00000000   0x43FE1804         DC32     0x43fe1804

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_4:
   \   00000000   0x........         DC32     F6x8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_5:
   \   00000000   0x........         DC32     F8X16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_6:
   \   00000000   0x........         DC32     F14x16_Idx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_7:
   \   00000000   0x........         DC32     F14x16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_8:
   \   00000000   0xFFFC8820         DC32     0xfffc8820
    758          
    759          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   Draw_BMP
        32   -> LCD_Set_Pos
        32   -> LCD_WrDat
      16   LCD_CLS
        16   -> LCD_WrCmd
        16   -> LCD_WrDat
       8   LCD_ClearLine
         8   -> LCD_WrCmd
         8   -> LCD_WrDat
       0   LCD_DLY_ms
      16   LCD_Fill
        16   -> LCD_WrCmd
        16   -> LCD_WrDat
      32   LCD_P14x16Str
        32   -> LCD_Set_Pos
        32   -> LCD_WrDat
      24   LCD_P16x16Ch
        24   -> LCD_Set_Pos
        24   -> LCD_WrDat
      32   LCD_P16x16Str
        32   -> LCD_Set_Pos
        32   -> LCD_WrDat
      32   LCD_P6x8Str
        32   -> LCD_Set_Pos
        32   -> LCD_WrDat
      32   LCD_P6x8StrW
        32   -> LCD_Set_Pos
        32   -> LCD_WrDat
      32   LCD_P8x16Str
        32   -> LCD_Set_Pos
        32   -> LCD_WrDat
      24   LCD_Print
        24   -> LCD_P16x16Str
        24   -> LCD_P8x16Str
      16   LCD_PutPixel
        16   -> LCD_Set_Pos
        16   -> LCD_WrCmd
        16   -> LCD_WrDat
      32   LCD_Rectangle
        32   -> LCD_DLY_ms
        32   -> LCD_Set_Pos
        32   -> LCD_WrDat
       8   LCD_Set_Pos
         8   -> LCD_WrCmd
       0   LCD_WrCmd
       0   LCD_WrDat
       8   OLED_Init
         8   -> GPIO
         8   -> LCD_DLY_ms
         8   -> LCD_Fill
         8   -> LCD_Set_Pos
         8   -> LCD_WrCmd


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_2
       4  ??DataTable7_3
       4  ??DataTable7_4
       4  ??DataTable7_5
       4  ??DataTable7_6
       4  ??DataTable7_7
       4  ??DataTable7_8
     118  Draw_BMP
     700  F14x16
      52  F14x16_Idx
     552  F6x8
    1520  F8X16
      56  LCD_CLS
      42  LCD_ClearLine
      26  LCD_DLY_ms
      60  LCD_Fill
     328  LCD_P14x16Str
     102  LCD_P16x16Ch
     144  LCD_P16x16Str
     122  LCD_P6x8Str
     126  LCD_P6x8StrW
     164  LCD_P8x16Str
     106  LCD_Print
      80  LCD_PutPixel
     152  LCD_Rectangle
      44  LCD_Set_Pos
      74  LCD_WrCmd
      78  LCD_WrDat
     312  OLED_Init

 
 2 824 bytes in section .rodata
 2 170 bytes in section .text
 
 2 170 bytes of CODE  memory
 2 824 bytes of CONST memory

Errors: none
Warnings: none
