###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.70.2.6274/W32 for ARM      11/May/2020  12:10:24 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\Current Projects\#1 Memristor tuning                  #
#                    circuit\memristor based control\mcu code\paper           #
#                    code\0.1ms control period\test                           #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\app\run_fun.c                       #
#    Command line =  "D:\Current Projects\#1 Memristor tuning                 #
#                    circuit\memristor based control\mcu code\paper           #
#                    code\0.1ms control period\test                           #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\app\run_fun.c" -D LPLD_K60 -lCN     #
#                    "D:\Current Projects\#1 Memristor tuning                 #
#                    circuit\memristor based control\mcu code\paper           #
#                    code\0.1ms control period\test                           #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\FLASH\List\" -lB "D:\Current    #
#                    Projects\#1 Memristor tuning circuit\memristor based     #
#                    control\mcu code\paper code\0.1ms control period\test    #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\FLASH\List\" -o "D:\Current     #
#                    Projects\#1 Memristor tuning circuit\memristor based     #
#                    control\mcu code\paper code\0.1ms control period\test    #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\FLASH\Obj\" --no_cse            #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_clustering --no_scheduling --debug --endian=little  #
#                    --cpu=Cortex-M4 -e --fpu=None --dlib_config "C:\Program  #
#                    Files (x86)\IAR Systems\Embedded Workbench               #
#                    6.5_2\arm\INC\c\DLib_Config_Normal.h" -I "D:\Current     #
#                    Projects\#1 Memristor tuning circuit\memristor based     #
#                    control\mcu code\paper code\0.1ms control period\test    #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\app\" -I "D:\Current         #
#                    Projects\#1 Memristor tuning circuit\memristor based     #
#                    control\mcu code\paper code\0.1ms control period\test    #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\CPU\" -I           #
#                    "D:\Current Projects\#1 Memristor tuning                 #
#                    circuit\memristor based control\mcu code\paper           #
#                    code\0.1ms control period\test                           #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\common\" -I        #
#                    "D:\Current Projects\#1 Memristor tuning                 #
#                    circuit\memristor based control\mcu code\paper           #
#                    code\0.1ms control period\test                           #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\LPLD\" -I          #
#                    "D:\Current Projects\#1 Memristor tuning                 #
#                    circuit\memristor based control\mcu code\paper           #
#                    code\0.1ms control period\test                           #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\LPLD\HW\" -I       #
#                    "D:\Current Projects\#1 Memristor tuning                 #
#                    circuit\memristor based control\mcu code\paper           #
#                    code\0.1ms control period\test                           #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\LPLD\DEV\" -I      #
#                    "D:\Current Projects\#1 Memristor tuning                 #
#                    circuit\memristor based control\mcu code\paper           #
#                    code\0.1ms control period\test                           #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\uCOS-II\Ports\"    #
#                    -I "D:\Current Projects\#1 Memristor tuning              #
#                    circuit\memristor based control\mcu code\paper           #
#                    code\0.1ms control period\test                           #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\uCOS-II\Source\"   #
#                    -I "D:\Current Projects\#1 Memristor tuning              #
#                    circuit\memristor based control\mcu code\paper           #
#                    code\0.1ms control period\test                           #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\FatFs\" -I         #
#                    "D:\Current Projects\#1 Memristor tuning                 #
#                    circuit\memristor based control\mcu code\paper           #
#                    code\0.1ms control period\test                           #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\FatFs\option\" -I  #
#                    "D:\Current Projects\#1 Memristor tuning                 #
#                    circuit\memristor based control\mcu code\paper           #
#                    code\0.1ms control period\test                           #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\USB\common\" -I    #
#                    "D:\Current Projects\#1 Memristor tuning                 #
#                    circuit\memristor based control\mcu code\paper           #
#                    code\0.1ms control period\test                           #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\USB\driver\" -I    #
#                    "D:\Current Projects\#1 Memristor tuning                 #
#                    circuit\memristor based control\mcu code\paper           #
#                    code\0.1ms control period\test                           #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\USB\descriptor\"   #
#                    -I "D:\Current Projects\#1 Memristor tuning              #
#                    circuit\memristor based control\mcu code\paper           #
#                    code\0.1ms control period\test                           #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\USB\class\" -Ol    #
#                    -I "C:\Program Files (x86)\IAR Systems\Embedded          #
#                    Workbench 6.5_2\arm\CMSIS\Include\" -D ARM_MATH_CM4      #
#    List file    =  D:\Current Projects\#1 Memristor tuning                  #
#                    circuit\memristor based control\mcu code\paper           #
#                    code\0.1ms control period\test                           #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\FLASH\List\run_fun.lst          #
#    Object file  =  D:\Current Projects\#1 Memristor tuning                  #
#                    circuit\memristor based control\mcu code\paper           #
#                    code\0.1ms control period\test                           #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\FLASH\Obj\run_fun.o             #
#                                                                             #
#                                                                             #
###############################################################################

D:\Current Projects\#1 Memristor tuning circuit\memristor based control\mcu code\paper code\0.1ms control period\test code\CBY_K60_balance_DAC\project\(DMA PDB ADC)LPLD_DmaPdbADCx4\app\run_fun.c
      1          #include "common.h"
      2          
      3          #define Speed_Max 9900    //PWM最大占空比值
      4          

   \                                 In section .data, align 4
      5          float Blance_Kp = 320; //400
   \                     Blance_Kp:
   \   00000000   0x43A00000         DC32 43A00000H

   \                                 In section .bss, align 4
      6          float Blance_Kd = 00;//5280 
   \                     Blance_Kd:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
      7          float Delta = 00; //克服静摩擦的电机PWM常数
   \                     Delta:
   \   00000000                      DS8 4
      8          

   \                                 In section .text, align 2, keep-with-next
      9          void AngleControl(float RE_ANGLE) 
     10          {
   \                     AngleControl: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0005             MOVS     R5,R0
     11            int fValue = 0;
   \   00000004   0x2400             MOVS     R4,#+0
     12            float Err,DE; 
     13          
     14            ANGLE_BIAS=ANGLE_BIAS10/10;
   \   00000006   0x....             LDR.N    R0,??DataTable1
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0x....             LDR.N    R1,??DataTable1_1  ;; 0x41200000
   \   0000000C   0x.... 0x....      BL       __aeabi_fdiv
   \   00000010   0x....             LDR.N    R1,??DataTable1_2
   \   00000012   0x6008             STR      R0,[R1, #+0]
     15          
     16            Err = ANGLE_BIAS-RE_ANGLE;
   \   00000014   0x....             LDR.N    R0,??DataTable1_2
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0x0029             MOVS     R1,R5
   \   0000001A   0x.... 0x....      BL       __aeabi_fsub
   \   0000001E   0x0005             MOVS     R5,R0
     17            DE = Err - LE;
   \   00000020   0x0028             MOVS     R0,R5
   \   00000022   0x....             LDR.N    R1,??DataTable1_3
   \   00000024   0x6809             LDR      R1,[R1, #+0]
   \   00000026   0x.... 0x....      BL       __aeabi_fsub
   \   0000002A   0x0006             MOVS     R6,R0
     18          
     19            d_Pitch=DE * Blance_Kd;
   \   0000002C   0x....             LDR.N    R0,??DataTable1_4
   \   0000002E   0x6800             LDR      R0,[R0, #+0]
   \   00000030   0x0031             MOVS     R1,R6
   \   00000032   0x.... 0x....      BL       __aeabi_fmul
   \   00000036   0x....             LDR.N    R1,??DataTable1_5
   \   00000038   0x6008             STR      R0,[R1, #+0]
     20            p_Pitch=Err * Blance_Kp;
   \   0000003A   0x....             LDR.N    R0,??DataTable1_6
   \   0000003C   0x6800             LDR      R0,[R0, #+0]
   \   0000003E   0x0029             MOVS     R1,R5
   \   00000040   0x.... 0x....      BL       __aeabi_fmul
   \   00000044   0x....             LDR.N    R1,??DataTable1_7
   \   00000046   0x6008             STR      R0,[R1, #+0]
     21          
     22            fValue = Err * Blance_Kp + DE * Blance_Kd;
   \   00000048   0x....             LDR.N    R0,??DataTable1_6
   \   0000004A   0x6800             LDR      R0,[R0, #+0]
   \   0000004C   0x0029             MOVS     R1,R5
   \   0000004E   0x.... 0x....      BL       __aeabi_fmul
   \   00000052   0x0007             MOVS     R7,R0
   \   00000054   0x....             LDR.N    R0,??DataTable1_4
   \   00000056   0x6800             LDR      R0,[R0, #+0]
   \   00000058   0x0031             MOVS     R1,R6
   \   0000005A   0x.... 0x....      BL       __aeabi_fmul
   \   0000005E   0x0039             MOVS     R1,R7
   \   00000060   0x.... 0x....      BL       __aeabi_fadd
   \   00000064   0x.... 0x....      BL       __aeabi_f2iz
   \   00000068   0x0004             MOVS     R4,R0
     23            //angle_pre = DE;
     24            LE = Err;
   \   0000006A   0x....             LDR.N    R0,??DataTable1_3
   \   0000006C   0x6005             STR      R5,[R0, #+0]
     25            
     26            if(fValue > 0) fValue += Delta;
   \   0000006E   0x2C01             CMP      R4,#+1
   \   00000070   0xDB0A             BLT.N    ??AngleControl_0
   \   00000072   0x0020             MOVS     R0,R4
   \   00000074   0x.... 0x....      BL       __aeabi_i2f
   \   00000078   0x....             LDR.N    R1,??DataTable1_8
   \   0000007A   0x6809             LDR      R1,[R1, #+0]
   \   0000007C   0x.... 0x....      BL       __aeabi_fadd
   \   00000080   0x.... 0x....      BL       __aeabi_f2iz
   \   00000084   0x0004             MOVS     R4,R0
   \   00000086   0xE009             B.N      ??AngleControl_1
     27            else  fValue -= Delta;
   \                     ??AngleControl_0: (+1)
   \   00000088   0x0020             MOVS     R0,R4
   \   0000008A   0x.... 0x....      BL       __aeabi_i2f
   \   0000008E   0x....             LDR.N    R1,??DataTable1_8
   \   00000090   0x6809             LDR      R1,[R1, #+0]
   \   00000092   0x.... 0x....      BL       __aeabi_fsub
   \   00000096   0x.... 0x....      BL       __aeabi_f2iz
   \   0000009A   0x0004             MOVS     R4,R0
     28            
     29            if(fValue > Speed_Max) 
   \                     ??AngleControl_1: (+1)
   \   0000009C   0xF242 0x60AD      MOVW     R0,#+9901
   \   000000A0   0x4284             CMP      R4,R0
   \   000000A2   0xDB02             BLT.N    ??AngleControl_2
     30            {
     31               fValue = Speed_Max;
   \   000000A4   0xF242 0x64AC      MOVW     R4,#+9900
   \   000000A8   0xE003             B.N      ??AngleControl_3
     32            }
     33            else if(fValue < -Speed_Max)
   \                     ??AngleControl_2: (+1)
   \   000000AA   0x....             LDR.N    R0,??DataTable1_9  ;; 0xffffd954
   \   000000AC   0x4284             CMP      R4,R0
   \   000000AE   0xDA00             BGE.N    ??AngleControl_3
     34            {
     35               fValue = -Speed_Max;
   \   000000B0   0x....             LDR.N    R4,??DataTable1_9  ;; 0xffffd954
     36            }	
     37            
     38            g_fAngleControlOut = fValue;	
   \                     ??AngleControl_3: (+1)
   \   000000B2   0x....             LDR.N    R0,??DataTable1_10
   \   000000B4   0x6004             STR      R4,[R0, #+0]
     39          }
   \   000000B6   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
     40          

   \                                 In section .text, align 2, keep-with-next
     41          void MotoOutput() 
     42          {
   \                     MotoOutput: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
     43            //SetSpeed(g_fAngleControlOut,g_fAngleControlOut);   
     44            
     45            float fLeft, fRight;
     46            
     47          	//fLeft = g_fAngleControlOut; //-  g_fSpeedControlOut + g_fDirectionControlOut;
     48          	//fRight = g_fAngleControlOut; //- g_fSpeedControlOut - g_fDirectionControlOut;
     49          	fLeft = g_fAngleControlOut  + g_fDirectionControlOut;
   \   00000002   0x....             LDR.N    R0,??DataTable1_10
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x.... 0x....      BL       __aeabi_i2f
   \   0000000A   0x....             LDR.N    R1,??DataTable1_11
   \   0000000C   0x6809             LDR      R1,[R1, #+0]
   \   0000000E   0x.... 0x....      BL       __aeabi_fadd
   \   00000012   0x0004             MOVS     R4,R0
     50          	fRight = g_fAngleControlOut - g_fDirectionControlOut;
   \   00000014   0x....             LDR.N    R0,??DataTable1_10
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0x.... 0x....      BL       __aeabi_i2f
   \   0000001C   0x....             LDR.N    R1,??DataTable1_11
   \   0000001E   0x6809             LDR      R1,[R1, #+0]
   \   00000020   0x.... 0x....      BL       __aeabi_fsub
   \   00000024   0x0005             MOVS     R5,R0
     51          	
     52          	if(fLeft > Speed_Max)  fLeft = Speed_Max;
   \   00000026   0x0020             MOVS     R0,R4
   \   00000028   0x....             LDR.N    R1,??DataTable1_12  ;; 0x461ab001
   \   0000002A   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000002E   0xD801             BHI.N    ??MotoOutput_0
   \   00000030   0x....             LDR.N    R4,??DataTable1_13  ;; 0x461ab000
   \   00000032   0xE005             B.N      ??MotoOutput_1
     53            else if(fLeft < -Speed_Max)  fLeft = -Speed_Max;
   \                     ??MotoOutput_0: (+1)
   \   00000034   0x0020             MOVS     R0,R4
   \   00000036   0x....             LDR.N    R1,??DataTable1_14  ;; 0xc61ab000
   \   00000038   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000003C   0xD200             BCS.N    ??MotoOutput_1
   \   0000003E   0x....             LDR.N    R4,??DataTable1_14  ;; 0xc61ab000
     54            
     55            if(fRight > Speed_Max)  fRight = Speed_Max;
   \                     ??MotoOutput_1: (+1)
   \   00000040   0x0028             MOVS     R0,R5
   \   00000042   0x....             LDR.N    R1,??DataTable1_12  ;; 0x461ab001
   \   00000044   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000048   0xD801             BHI.N    ??MotoOutput_2
   \   0000004A   0x....             LDR.N    R5,??DataTable1_13  ;; 0x461ab000
   \   0000004C   0xE005             B.N      ??MotoOutput_3
     56            else if(fRight < -Speed_Max)  fRight = -Speed_Max;
   \                     ??MotoOutput_2: (+1)
   \   0000004E   0x0028             MOVS     R0,R5
   \   00000050   0x....             LDR.N    R1,??DataTable1_14  ;; 0xc61ab000
   \   00000052   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000056   0xD200             BCS.N    ??MotoOutput_3
   \   00000058   0x....             LDR.N    R5,??DataTable1_14  ;; 0xc61ab000
     57          		
     58          	g_fLeftMotorOut = (int)fLeft;
   \                     ??MotoOutput_3: (+1)
   \   0000005A   0x0020             MOVS     R0,R4
   \   0000005C   0x.... 0x....      BL       __aeabi_f2iz
   \   00000060   0x....             LDR.N    R1,??DataTable1_15
   \   00000062   0x6008             STR      R0,[R1, #+0]
     59          	g_fRightMotorOut = (int)fRight;
   \   00000064   0x0028             MOVS     R0,R5
   \   00000066   0x.... 0x....      BL       __aeabi_f2iz
   \   0000006A   0x....             LDR.N    R1,??DataTable1_16
   \   0000006C   0x6008             STR      R0,[R1, #+0]
     60            
     61            //motor(g_fLeftMotorOut,g_fRightMotorOut);
     62            if(g_Car_Motor_Run == 1)
   \   0000006E   0x....             LDR.N    R0,??DataTable1_17
   \   00000070   0x7800             LDRB     R0,[R0, #+0]
   \   00000072   0x2801             CMP      R0,#+1
   \   00000074   0xD106             BNE.N    ??MotoOutput_4
     63            {
     64              motor(g_fLeftMotorOut,g_fRightMotorOut); 
   \   00000076   0x....             LDR.N    R0,??DataTable1_16
   \   00000078   0x6801             LDR      R1,[R0, #+0]
   \   0000007A   0x....             LDR.N    R0,??DataTable1_15
   \   0000007C   0x6800             LDR      R0,[R0, #+0]
   \   0000007E   0x.... 0x....      BL       motor
   \   00000082   0xE007             B.N      ??MotoOutput_5
     65            }
     66            else if(g_Car_Motor_Run == 0)
   \                     ??MotoOutput_4: (+1)
   \   00000084   0x....             LDR.N    R0,??DataTable1_17
   \   00000086   0x7800             LDRB     R0,[R0, #+0]
   \   00000088   0x2800             CMP      R0,#+0
   \   0000008A   0xD103             BNE.N    ??MotoOutput_5
     67            {
     68              motor(0,0);
   \   0000008C   0x2100             MOVS     R1,#+0
   \   0000008E   0x2000             MOVS     R0,#+0
   \   00000090   0x.... 0x....      BL       motor
     69            }
     70          }
   \                     ??MotoOutput_5: (+1)
   \   00000094   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     ANGLE_BIAS10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x41200000         DC32     0x41200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     ANGLE_BIAS

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     LE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x........         DC32     Blance_Kd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x........         DC32     d_Pitch

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x........         DC32     Blance_Kp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x........         DC32     p_Pitch

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   0x........         DC32     Delta

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_9:
   \   00000000   0xFFFFD954         DC32     0xffffd954

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_10:
   \   00000000   0x........         DC32     g_fAngleControlOut

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_11:
   \   00000000   0x........         DC32     g_fDirectionControlOut

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_12:
   \   00000000   0x461AB001         DC32     0x461ab001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_13:
   \   00000000   0x461AB000         DC32     0x461ab000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_14:
   \   00000000   0xC61AB000         DC32     0xc61ab000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_15:
   \   00000000   0x........         DC32     g_fLeftMotorOut

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_16:
   \   00000000   0x........         DC32     g_fRightMotorOut

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_17:
   \   00000000   0x........         DC32     g_Car_Motor_Run

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   AngleControl
        24   -> __aeabi_f2iz
        24   -> __aeabi_fadd
        24   -> __aeabi_fdiv
        24   -> __aeabi_fmul
        24   -> __aeabi_fsub
        24   -> __aeabi_i2f
      16   MotoOutput
        16   -> __aeabi_cfcmple
        16   -> __aeabi_cfrcmple
        16   -> __aeabi_f2iz
        16   -> __aeabi_fadd
        16   -> __aeabi_fsub
        16   -> __aeabi_i2f
        16   -> motor


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_10
       4  ??DataTable1_11
       4  ??DataTable1_12
       4  ??DataTable1_13
       4  ??DataTable1_14
       4  ??DataTable1_15
       4  ??DataTable1_16
       4  ??DataTable1_17
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
       4  ??DataTable1_9
     184  AngleControl
       4  Blance_Kd
       4  Blance_Kp
       4  Delta
     150  MotoOutput

 
   8 bytes in section .bss
   4 bytes in section .data
 406 bytes in section .text
 
 406 bytes of CODE memory
  12 bytes of DATA memory

Errors: none
Warnings: 2
