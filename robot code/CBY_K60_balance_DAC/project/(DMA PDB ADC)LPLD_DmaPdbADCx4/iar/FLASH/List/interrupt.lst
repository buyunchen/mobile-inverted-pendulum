###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.70.2.6274/W32 for ARM      11/May/2020  12:41:21 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\Current Projects\#1 Memristor tuning                  #
#                    circuit\memristor based control\mcu code\paper           #
#                    code\0.1ms control period\test                           #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\app\interrupt.c                     #
#    Command line =  "D:\Current Projects\#1 Memristor tuning                 #
#                    circuit\memristor based control\mcu code\paper           #
#                    code\0.1ms control period\test                           #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\app\interrupt.c" -D LPLD_K60 -lCN   #
#                    "D:\Current Projects\#1 Memristor tuning                 #
#                    circuit\memristor based control\mcu code\paper           #
#                    code\0.1ms control period\test                           #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\FLASH\List\" -lB "D:\Current    #
#                    Projects\#1 Memristor tuning circuit\memristor based     #
#                    control\mcu code\paper code\0.1ms control period\test    #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\FLASH\List\" -o "D:\Current     #
#                    Projects\#1 Memristor tuning circuit\memristor based     #
#                    control\mcu code\paper code\0.1ms control period\test    #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\FLASH\Obj\" --no_cse            #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_clustering --no_scheduling --debug --endian=little  #
#                    --cpu=Cortex-M4 -e --fpu=None --dlib_config "C:\Program  #
#                    Files (x86)\IAR Systems\Embedded Workbench               #
#                    6.5_2\arm\INC\c\DLib_Config_Normal.h" -I "D:\Current     #
#                    Projects\#1 Memristor tuning circuit\memristor based     #
#                    control\mcu code\paper code\0.1ms control period\test    #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\app\" -I "D:\Current         #
#                    Projects\#1 Memristor tuning circuit\memristor based     #
#                    control\mcu code\paper code\0.1ms control period\test    #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\CPU\" -I           #
#                    "D:\Current Projects\#1 Memristor tuning                 #
#                    circuit\memristor based control\mcu code\paper           #
#                    code\0.1ms control period\test                           #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\common\" -I        #
#                    "D:\Current Projects\#1 Memristor tuning                 #
#                    circuit\memristor based control\mcu code\paper           #
#                    code\0.1ms control period\test                           #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\LPLD\" -I          #
#                    "D:\Current Projects\#1 Memristor tuning                 #
#                    circuit\memristor based control\mcu code\paper           #
#                    code\0.1ms control period\test                           #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\LPLD\HW\" -I       #
#                    "D:\Current Projects\#1 Memristor tuning                 #
#                    circuit\memristor based control\mcu code\paper           #
#                    code\0.1ms control period\test                           #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\LPLD\DEV\" -I      #
#                    "D:\Current Projects\#1 Memristor tuning                 #
#                    circuit\memristor based control\mcu code\paper           #
#                    code\0.1ms control period\test                           #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\uCOS-II\Ports\"    #
#                    -I "D:\Current Projects\#1 Memristor tuning              #
#                    circuit\memristor based control\mcu code\paper           #
#                    code\0.1ms control period\test                           #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\uCOS-II\Source\"   #
#                    -I "D:\Current Projects\#1 Memristor tuning              #
#                    circuit\memristor based control\mcu code\paper           #
#                    code\0.1ms control period\test                           #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\FatFs\" -I         #
#                    "D:\Current Projects\#1 Memristor tuning                 #
#                    circuit\memristor based control\mcu code\paper           #
#                    code\0.1ms control period\test                           #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\FatFs\option\" -I  #
#                    "D:\Current Projects\#1 Memristor tuning                 #
#                    circuit\memristor based control\mcu code\paper           #
#                    code\0.1ms control period\test                           #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\USB\common\" -I    #
#                    "D:\Current Projects\#1 Memristor tuning                 #
#                    circuit\memristor based control\mcu code\paper           #
#                    code\0.1ms control period\test                           #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\USB\driver\" -I    #
#                    "D:\Current Projects\#1 Memristor tuning                 #
#                    circuit\memristor based control\mcu code\paper           #
#                    code\0.1ms control period\test                           #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\USB\descriptor\"   #
#                    -I "D:\Current Projects\#1 Memristor tuning              #
#                    circuit\memristor based control\mcu code\paper           #
#                    code\0.1ms control period\test                           #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\..\..\..\lib\USB\class\" -Ol    #
#                    -I "C:\Program Files (x86)\IAR Systems\Embedded          #
#                    Workbench 6.5_2\arm\CMSIS\Include\" -D ARM_MATH_CM4      #
#    List file    =  D:\Current Projects\#1 Memristor tuning                  #
#                    circuit\memristor based control\mcu code\paper           #
#                    code\0.1ms control period\test                           #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\FLASH\List\interrupt.lst        #
#    Object file  =  D:\Current Projects\#1 Memristor tuning                  #
#                    circuit\memristor based control\mcu code\paper           #
#                    code\0.1ms control period\test                           #
#                    code\CBY_K60_balance_DAC\project\(DMA PDB                #
#                    ADC)LPLD_DmaPdbADCx4\iar\FLASH\Obj\interrupt.o           #
#                                                                             #
#                                                                             #
###############################################################################

D:\Current Projects\#1 Memristor tuning circuit\memristor based control\mcu code\paper code\0.1ms control period\test code\CBY_K60_balance_DAC\project\(DMA PDB ADC)LPLD_DmaPdbADCx4\app\interrupt.c
      1           #include "common.h"
      2          

   \                                 In section .bss, align 4
      3          int _1MsEventCount=0;
   \                     _1MsEventCount:
   \   00000000                      DS8 4
      4          
      5          
      6          /*
      7           * ÏÂ½µÑØÖÐ¶Ïº¯Êý
      8           */

   \                                 In section .text, align 2, keep-with-next
      9          void portc_isr(void)
     10          { /*
   \                     portc_isr: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
     11            * C8ÏÂ½µÑØÖÐ¶Ïº¯Êý
     12            */
     13            if(LPLD_GPIO_IsPinxExt(PORTC, GPIO_Pin8))
   \   00000002   0x....             LDR.N    R0,??DataTable2  ;; 0x4004b0a0
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x05C0             LSLS     R0,R0,#+23
   \   00000008   0xD51F             BPL.N    ??portc_isr_0
     14            {
     15              int cnt;
     16              unsigned char dir=0;
   \   0000000A   0x2500             MOVS     R5,#+0
     17              //FTM1
     18              if(T-last_turn_time>15)
   \   0000000C   0x....             LDR.N    R0,??DataTable2_1
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0x....             LDR.N    R1,??DataTable2_2
   \   00000012   0x6809             LDR      R1,[R1, #+0]
   \   00000014   0x1A40             SUBS     R0,R0,R1
   \   00000016   0x2810             CMP      R0,#+16
   \   00000018   0xD317             BCC.N    ??portc_isr_0
     19              { 
     20               for(cnt=0;cnt<20;cnt++)
   \   0000001A   0x2400             MOVS     R4,#+0
   \   0000001C   0xE005             B.N      ??portc_isr_1
     21                 dir += LPLD_GPIO_Input_b(PTC,12);
   \                     ??portc_isr_2: (+1)
   \   0000001E   0x210C             MOVS     R1,#+12
   \   00000020   0x....             LDR.N    R0,??DataTable2_3  ;; 0x400ff080
   \   00000022   0x.... 0x....      BL       LPLD_GPIO_Input_b
   \   00000026   0x1945             ADDS     R5,R0,R5
   \   00000028   0x1C64             ADDS     R4,R4,#+1
   \                     ??portc_isr_1: (+1)
   \   0000002A   0x2C14             CMP      R4,#+20
   \   0000002C   0xDBF7             BLT.N    ??portc_isr_2
     22               if(dir>10) //Õý×ª
   \   0000002E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000030   0x2D0B             CMP      R5,#+11
   \   00000032   0xDB03             BLT.N    ??portc_isr_3
     23                 status_knob = 1;
   \   00000034   0x....             LDR.N    R0,??DataTable2_4
   \   00000036   0x2101             MOVS     R1,#+1
   \   00000038   0x7001             STRB     R1,[R0, #+0]
   \   0000003A   0xE002             B.N      ??portc_isr_4
     24               else       //·´×ª
     25                 status_knob = 2;
   \                     ??portc_isr_3: (+1)
   \   0000003C   0x....             LDR.N    R0,??DataTable2_4
   \   0000003E   0x2102             MOVS     R1,#+2
   \   00000040   0x7001             STRB     R1,[R0, #+0]
     26               last_turn_time=T;
   \                     ??portc_isr_4: (+1)
   \   00000042   0x....             LDR.N    R0,??DataTable2_2
   \   00000044   0x....             LDR.N    R1,??DataTable2_1
   \   00000046   0x6809             LDR      R1,[R1, #+0]
   \   00000048   0x6001             STR      R1,[R0, #+0]
     27              }
     28            }
     29            /*
     30            * C5ÏÂ½µÑØÖÐ¶Ïº¯Êý
     31            */
     32            if(LPLD_GPIO_IsPinxExt(PORTC, GPIO_Pin5))
   \                     ??portc_isr_0: (+1)
   \   0000004A   0x....             LDR.N    R0,??DataTable2  ;; 0x4004b0a0
   \   0000004C   0x6800             LDR      R0,[R0, #+0]
   \   0000004E   0x0680             LSLS     R0,R0,#+26
   \   00000050   0xD51F             BPL.N    ??portc_isr_5
     33            {
     34              int cnt;
     35              unsigned char dir=0;
   \   00000052   0x2500             MOVS     R5,#+0
     36              //obse++;
     37              if(T-last_turn_time>12)
   \   00000054   0x....             LDR.N    R0,??DataTable2_1
   \   00000056   0x6800             LDR      R0,[R0, #+0]
   \   00000058   0x....             LDR.N    R1,??DataTable2_2
   \   0000005A   0x6809             LDR      R1,[R1, #+0]
   \   0000005C   0x1A40             SUBS     R0,R0,R1
   \   0000005E   0x280D             CMP      R0,#+13
   \   00000060   0xD317             BCC.N    ??portc_isr_5
     38              { 
     39                for(cnt=0;cnt<20;cnt++)
   \   00000062   0x2400             MOVS     R4,#+0
   \   00000064   0xE005             B.N      ??portc_isr_6
     40                  dir += LPLD_GPIO_Input_b(PTC,3);
   \                     ??portc_isr_7: (+1)
   \   00000066   0x2103             MOVS     R1,#+3
   \   00000068   0x....             LDR.N    R0,??DataTable2_3  ;; 0x400ff080
   \   0000006A   0x.... 0x....      BL       LPLD_GPIO_Input_b
   \   0000006E   0x1945             ADDS     R5,R0,R5
   \   00000070   0x1C64             ADDS     R4,R4,#+1
   \                     ??portc_isr_6: (+1)
   \   00000072   0x2C14             CMP      R4,#+20
   \   00000074   0xDBF7             BLT.N    ??portc_isr_7
     41                if(dir>10) //Õý×ª
   \   00000076   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000078   0x2D0B             CMP      R5,#+11
   \   0000007A   0xDB03             BLT.N    ??portc_isr_8
     42                  status_knob = 3;
   \   0000007C   0x....             LDR.N    R0,??DataTable2_4
   \   0000007E   0x2103             MOVS     R1,#+3
   \   00000080   0x7001             STRB     R1,[R0, #+0]
   \   00000082   0xE002             B.N      ??portc_isr_9
     43                else       //·´×ª
     44                  status_knob = 4;
   \                     ??portc_isr_8: (+1)
   \   00000084   0x....             LDR.N    R0,??DataTable2_4
   \   00000086   0x2104             MOVS     R1,#+4
   \   00000088   0x7001             STRB     R1,[R0, #+0]
     45                last_turn_time=T;
   \                     ??portc_isr_9: (+1)
   \   0000008A   0x....             LDR.N    R0,??DataTable2_2
   \   0000008C   0x....             LDR.N    R1,??DataTable2_1
   \   0000008E   0x6809             LDR      R1,[R1, #+0]
   \   00000090   0x6001             STR      R1,[R0, #+0]
     46              }
     47             }
     48          }
   \                     ??portc_isr_5: (+1)
   \   00000092   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     49          
     50          
     51          /*
     52           * PIT1ÖÐ¶Ïº¯Êý
     53           */

   \                                 In section .text, align 2, keep-with-next
     54          void pit1_isr(void)
     55          {   
     56              //US = 0;
     57                
     58              T++;
   \                     pit1_isr: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable2_1
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x1C40             ADDS     R0,R0,#+1
   \   00000006   0x....             LDR.N    R1,??DataTable2_1
   \   00000008   0x6008             STR      R0,[R1, #+0]
     59              //get_angle();
     60              //AngleControl(Pitch);
     61              //MotoOutput();
     62              
     63              //data_ad = getData(); 
     64              //US_display = US;
     65              //Get_GA(ACCE_X,gyro_Y);
     66              //Kalman_update(angle_phy,dangle_phy,&g_fCarAngle,&g_fCarAngle_d);
     67                 
     68              //data_ad = getData();
     69              //adcdac_convert = (2079-data_ad*4096/32767)/30-30;
     70              //write_mcp4725(1000,0XC6);
     71              //write_mcp4725(1000,0XC4);
     72                 
     73              //get_angle();
     74              
     75               //get_mcu_ad();
     76               //adcdac_convert = (int)((2079-ch2*4096/32767)/30+120);
     77               //AngleControl(adcdac_convert);
     78               //MotoOutput();
     79               
     80               
     81          
     82          }
   \   0000000A   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
     83          void pit2_isr(void)
     84          {   
     85               US++;
   \                     pit2_isr: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable2_5
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x1C40             ADDS     R0,R0,#+1
   \   00000006   0x....             LDR.N    R1,??DataTable2_5
   \   00000008   0x6008             STR      R0,[R1, #+0]
     86          }
   \   0000000A   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x4004B0A0         DC32     0x4004b0a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     T

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     last_turn_time

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x400FF080         DC32     0x400ff080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x........         DC32     status_knob

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x........         DC32     US
     87          
     88          
     89          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   pit1_isr
       0   pit2_isr
      16   portc_isr
        16   -> LPLD_GPIO_Input_b


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  _1MsEventCount
      12  pit1_isr
      12  pit2_isr
     148  portc_isr

 
   4 bytes in section .bss
 196 bytes in section .text
 
 196 bytes of CODE memory
   4 bytes of DATA memory

Errors: none
Warnings: none
